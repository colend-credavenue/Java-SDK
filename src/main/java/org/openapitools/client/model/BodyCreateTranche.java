/*
 * Allcloud (Allcloud)
 * # Integration Document  The following are the endpoints to be called during and pre/post disbursement state of a loan.  ## Authentication  Authentication details and host will be shared privately.  ## Workflow  **Create Loan** is the initial endpoint to be called to create a loan. Loan will be processed in the background and the status of loan will be provided through the configured Webhook. However, the client can also poll the server via the **Get Loan Details** endpoint to know the loan's status(**Get Loan Details** is rate throttled and polling this API will be restricted). Loan's shall be considered rejected if proper response is not available within 10minutes.  All other endpoints are self-explanatory and can be retried upto 3 times before marking as failure.  ## Allowed Links  All Link attributes should contain 1. Accessible File Link URL which can be Public/Expiry URL/Whitelisted File Server Link(Write to tech.colending@credavenue.com for obtaining our IP address to whitelist) 2. File Link URL with Header Authentication (Header values should be shared with tech.colending@credavenue.com)  ## Allowed Fields Length <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">  <colgroup>  <col  class=\"org-left\" />  <col  class=\"org-left\" />  </colgroup> <thead> <tr> <th scope=\"col\" class=\"org-left\">Data Type</th> <th scope=\"col\" class=\"org-left\">Max Length</th> </tr> </thead>  <tbody> <tr> <td class=\"org-left\">String</td> <td class=\"org-left\">65,535 bytes</td> </tr>  <tr> <td class=\"org-left\">Float</td> <td class=\"org-left\">8 bytes</td> </tr>  <tr> <td class=\"org-left\">Integer</td> <td class=\"org-left\">4 bytes</td> </tr>  <tr> <td class=\"org-left\">Date</td> <td class=\"org-left\">10 characters</td> </tr>  </tbody> </table>  # Webhooks  Webhooks can be configured for the below events  1. Loan status change      Response Payload :      {         \"product_id\": \"\",         \"client_loan_id\": \"\",         \"principal_amount\": \"\",         \"interest_rate\": \"\",         \"tenure\": \"\",         \"tenure_frequency\": \"MONTHLY\",         \"cibil_score\": \"\",         \"purpose\": \"\",         \"repayment_frequency\":\"\",         \"number_of_repayments\": \"\",         \"status\": \"\",         \"principal_outstanding\": \"\",         \"reject_reason\": \"\"     }          Statuses : ['new', 'approved', 'rejected', 'agreement_signed', 'dropped', 'disbursement_ready', 'disbursed', 'matured', 'partner_settled']     2. Loan disbursement details (Disbursed through razorpay)      Callback Payload:      {         \"client_loan_id\":\"\",         \"status\":\"borrower_disbursed\",         \"disbursed_date\":\"\",         \"utr_number\":\"\",         \"disbursement_type\":\"\",         \"payment_reversed\": \"TRUE/FALSE\",         \"disbursement_amount\":\"\",         \"investor_disbursed_amount\": \"\",         \"partner_disbursed_amount\": \"\",         \"differential_interest\":\"\",         \"investor_differential_interest\":\"\",         \"partner_differential_interest\":\"\",         \"differential_days\":\"\",         \"interest_start_date\":\"\",         \"investor_processing_fee\":\"\",         \"partner_processing_fee\":\"\",         \"investor_stamp_duty\":\"\",         \"partner_stamp_duty\":\"\",         \"investor_documentation_charges\":\"\",         \"partner_documentation_charges\":\"\"     }  Provide the following details to configure the webhooks 1. callback URL 2. authentication for the callback URL (header authentication)    # Validations  **PAN**  - **Example**: ABGPA1232P - **Sequence**: First five digits will be alpha, next four will be Numerical and again last single digit will be alpha  **GSTIN**  - **Example**: 33AAACT2727Q1ZV - **Sequence**: First two digits is Numerical, Next is PAN sequence as specified above, again thirteenth digit will be numerical, fourteenth digit is alpha, last digit will be alpha or numerical  **CIN**  - **Example**: U65929TN2017PTC117196 - **Sequence**: First digit is Alpha, next 5 numeric digits, next two alpha, next set of 4 numeric digits, Next 3 alpha, last 6 numeric digits  **PASSPORT**  - **Example**: A2096457 - **Sequence**: Total 8 digits, first digit is Alpha, remaining digits are numerical  **AADHAR NO**  - The standard 12 digits numerical.  **MOBILE NO**  - **Sequence**: 10 numerical digits  **IFSC CODE**  - **Example**: PUNB0596600 - **Sequence**: First four alpha, next fifth digit is 0 (zero) always and last six digit is alpha/numeric. Totally 11 digits.  **PIN CODE**  - 6 numerical digits
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@colending.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ResponseCreateTrancheBureauReportData;
import org.openapitools.client.model.ResponseCreateTrancheBusinessData;
import org.openapitools.client.model.ResponseCreateTrancheDisbursementAccounts;
import org.openapitools.client.model.ResponseCreateTrancheLoanData;
import org.threeten.bp.LocalDate;

/**
 * BodyCreateTranche
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-06T13:00:59.364702+05:30[Asia/Kolkata]")
public class BodyCreateTranche {
  public static final String SERIALIZED_NAME_TRANCHE_NUMBER = "tranche_number";
  @SerializedName(SERIALIZED_NAME_TRANCHE_NUMBER)
  private Integer trancheNumber;

  public static final String SERIALIZED_NAME_PRINCIPAL_AMOUNT = "principal_amount";
  @SerializedName(SERIALIZED_NAME_PRINCIPAL_AMOUNT)
  private Integer principalAmount;

  public static final String SERIALIZED_NAME_DIFFERENTIAL_INTEREST = "differential_interest";
  @SerializedName(SERIALIZED_NAME_DIFFERENTIAL_INTEREST)
  private Integer differentialInterest;

  public static final String SERIALIZED_NAME_INTEREST_START_DATE = "interest_start_date";
  @SerializedName(SERIALIZED_NAME_INTEREST_START_DATE)
  private LocalDate interestStartDate;

  public static final String SERIALIZED_NAME_PROCESSING_FEE = "processing_fee";
  @SerializedName(SERIALIZED_NAME_PROCESSING_FEE)
  private Integer processingFee;

  public static final String SERIALIZED_NAME_STAMP_DUTY = "stamp_duty";
  @SerializedName(SERIALIZED_NAME_STAMP_DUTY)
  private Integer stampDuty;

  public static final String SERIALIZED_NAME_INSURANCE_CHARGES = "insurance_charges";
  @SerializedName(SERIALIZED_NAME_INSURANCE_CHARGES)
  private Integer insuranceCharges;

  public static final String SERIALIZED_NAME_DOCUMENTATION_CHARGES = "documentation_charges";
  @SerializedName(SERIALIZED_NAME_DOCUMENTATION_CHARGES)
  private Integer documentationCharges;

  public static final String SERIALIZED_NAME_OTHER_CHARGES = "other_charges";
  @SerializedName(SERIALIZED_NAME_OTHER_CHARGES)
  private Integer otherCharges;

  public static final String SERIALIZED_NAME_CLOSING_LOAN_PRINCIPAL = "closing_loan_principal";
  @SerializedName(SERIALIZED_NAME_CLOSING_LOAN_PRINCIPAL)
  private Integer closingLoanPrincipal;

  public static final String SERIALIZED_NAME_TRANCHE_DOC_LINK = "tranche_doc_link";
  @SerializedName(SERIALIZED_NAME_TRANCHE_DOC_LINK)
  private String trancheDocLink;

  public static final String SERIALIZED_NAME_TRANCHE_DOC_LINK_PASSWORD = "tranche_doc_link_password";
  @SerializedName(SERIALIZED_NAME_TRANCHE_DOC_LINK_PASSWORD)
  private String trancheDocLinkPassword;

  public static final String SERIALIZED_NAME_DISBURSEMENT_ACCOUNTS = "disbursement_accounts";
  @SerializedName(SERIALIZED_NAME_DISBURSEMENT_ACCOUNTS)
  private List<ResponseCreateTrancheDisbursementAccounts> disbursementAccounts = null;

  public static final String SERIALIZED_NAME_LOAN_DATA = "loan_data";
  @SerializedName(SERIALIZED_NAME_LOAN_DATA)
  private List<ResponseCreateTrancheLoanData> loanData = null;

  public static final String SERIALIZED_NAME_BUREAU_REPORT_DATA = "bureau_report_data";
  @SerializedName(SERIALIZED_NAME_BUREAU_REPORT_DATA)
  private ResponseCreateTrancheBureauReportData bureauReportData;

  public static final String SERIALIZED_NAME_CLIENT_LOAN_ID = "client_loan_id";
  @SerializedName(SERIALIZED_NAME_CLIENT_LOAN_ID)
  private String clientLoanId;

  public static final String SERIALIZED_NAME_BUSINESS_DATA = "business_data";
  @SerializedName(SERIALIZED_NAME_BUSINESS_DATA)
  private ResponseCreateTrancheBusinessData businessData;


  public BodyCreateTranche trancheNumber(Integer trancheNumber) {
    
    this.trancheNumber = trancheNumber;
    return this;
  }

   /**
   * Tranche Number
   * @return trancheNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tranche Number")

  public Integer getTrancheNumber() {
    return trancheNumber;
  }


  public void setTrancheNumber(Integer trancheNumber) {
    this.trancheNumber = trancheNumber;
  }


  public BodyCreateTranche principalAmount(Integer principalAmount) {
    
    this.principalAmount = principalAmount;
    return this;
  }

   /**
   * Principal amount to be disbursed in the tranche
   * @return principalAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Principal amount to be disbursed in the tranche")

  public Integer getPrincipalAmount() {
    return principalAmount;
  }


  public void setPrincipalAmount(Integer principalAmount) {
    this.principalAmount = principalAmount;
  }


  public BodyCreateTranche differentialInterest(Integer differentialInterest) {
    
    this.differentialInterest = differentialInterest;
    return this;
  }

   /**
   * Broken period interest amount
   * @return differentialInterest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Broken period interest amount")

  public Integer getDifferentialInterest() {
    return differentialInterest;
  }


  public void setDifferentialInterest(Integer differentialInterest) {
    this.differentialInterest = differentialInterest;
  }


  public BodyCreateTranche interestStartDate(LocalDate interestStartDate) {
    
    this.interestStartDate = interestStartDate;
    return this;
  }

   /**
   * Pre Emi interest due date
   * @return interestStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pre Emi interest due date")

  public LocalDate getInterestStartDate() {
    return interestStartDate;
  }


  public void setInterestStartDate(LocalDate interestStartDate) {
    this.interestStartDate = interestStartDate;
  }


  public BodyCreateTranche processingFee(Integer processingFee) {
    
    this.processingFee = processingFee;
    return this;
  }

   /**
   * Processing fee amount (Inckusive of GST)
   * @return processingFee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Processing fee amount (Inckusive of GST)")

  public Integer getProcessingFee() {
    return processingFee;
  }


  public void setProcessingFee(Integer processingFee) {
    this.processingFee = processingFee;
  }


  public BodyCreateTranche stampDuty(Integer stampDuty) {
    
    this.stampDuty = stampDuty;
    return this;
  }

   /**
   * Stamp duty amount
   * @return stampDuty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stamp duty amount")

  public Integer getStampDuty() {
    return stampDuty;
  }


  public void setStampDuty(Integer stampDuty) {
    this.stampDuty = stampDuty;
  }


  public BodyCreateTranche insuranceCharges(Integer insuranceCharges) {
    
    this.insuranceCharges = insuranceCharges;
    return this;
  }

   /**
   * Insurance premium inclusive of GST
   * @return insuranceCharges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Insurance premium inclusive of GST")

  public Integer getInsuranceCharges() {
    return insuranceCharges;
  }


  public void setInsuranceCharges(Integer insuranceCharges) {
    this.insuranceCharges = insuranceCharges;
  }


  public BodyCreateTranche documentationCharges(Integer documentationCharges) {
    
    this.documentationCharges = documentationCharges;
    return this;
  }

   /**
   * Total documentation charges inclusive of GST
   * @return documentationCharges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total documentation charges inclusive of GST")

  public Integer getDocumentationCharges() {
    return documentationCharges;
  }


  public void setDocumentationCharges(Integer documentationCharges) {
    this.documentationCharges = documentationCharges;
  }


  public BodyCreateTranche otherCharges(Integer otherCharges) {
    
    this.otherCharges = otherCharges;
    return this;
  }

   /**
   * Any other charges inclusive of GST
   * @return otherCharges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any other charges inclusive of GST")

  public Integer getOtherCharges() {
    return otherCharges;
  }


  public void setOtherCharges(Integer otherCharges) {
    this.otherCharges = otherCharges;
  }


  public BodyCreateTranche closingLoanPrincipal(Integer closingLoanPrincipal) {
    
    this.closingLoanPrincipal = closingLoanPrincipal;
    return this;
  }

   /**
   * Balance principal amount after this tranche
   * @return closingLoanPrincipal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Balance principal amount after this tranche")

  public Integer getClosingLoanPrincipal() {
    return closingLoanPrincipal;
  }


  public void setClosingLoanPrincipal(Integer closingLoanPrincipal) {
    this.closingLoanPrincipal = closingLoanPrincipal;
  }


  public BodyCreateTranche trancheDocLink(String trancheDocLink) {
    
    this.trancheDocLink = trancheDocLink;
    return this;
  }

   /**
   * Link to the corresponding document
   * @return trancheDocLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Link to the corresponding document")

  public String getTrancheDocLink() {
    return trancheDocLink;
  }


  public void setTrancheDocLink(String trancheDocLink) {
    this.trancheDocLink = trancheDocLink;
  }


  public BodyCreateTranche trancheDocLinkPassword(String trancheDocLinkPassword) {
    
    this.trancheDocLinkPassword = trancheDocLinkPassword;
    return this;
  }

   /**
   * Link to the corresponding document
   * @return trancheDocLinkPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Link to the corresponding document")

  public String getTrancheDocLinkPassword() {
    return trancheDocLinkPassword;
  }


  public void setTrancheDocLinkPassword(String trancheDocLinkPassword) {
    this.trancheDocLinkPassword = trancheDocLinkPassword;
  }


  public BodyCreateTranche disbursementAccounts(List<ResponseCreateTrancheDisbursementAccounts> disbursementAccounts) {
    
    this.disbursementAccounts = disbursementAccounts;
    return this;
  }

  public BodyCreateTranche addDisbursementAccountsItem(ResponseCreateTrancheDisbursementAccounts disbursementAccountsItem) {
    if (this.disbursementAccounts == null) {
      this.disbursementAccounts = new ArrayList<ResponseCreateTrancheDisbursementAccounts>();
    }
    this.disbursementAccounts.add(disbursementAccountsItem);
    return this;
  }

   /**
   * Refer table DisbursementAccounts for attributes
   * @return disbursementAccounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Refer table DisbursementAccounts for attributes")

  public List<ResponseCreateTrancheDisbursementAccounts> getDisbursementAccounts() {
    return disbursementAccounts;
  }


  public void setDisbursementAccounts(List<ResponseCreateTrancheDisbursementAccounts> disbursementAccounts) {
    this.disbursementAccounts = disbursementAccounts;
  }


  public BodyCreateTranche loanData(List<ResponseCreateTrancheLoanData> loanData) {
    
    this.loanData = loanData;
    return this;
  }

  public BodyCreateTranche addLoanDataItem(ResponseCreateTrancheLoanData loanDataItem) {
    if (this.loanData == null) {
      this.loanData = new ArrayList<ResponseCreateTrancheLoanData>();
    }
    this.loanData.add(loanDataItem);
    return this;
  }

   /**
   * Refer table LoanData for attributes
   * @return loanData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Refer table LoanData for attributes")

  public List<ResponseCreateTrancheLoanData> getLoanData() {
    return loanData;
  }


  public void setLoanData(List<ResponseCreateTrancheLoanData> loanData) {
    this.loanData = loanData;
  }


  public BodyCreateTranche bureauReportData(ResponseCreateTrancheBureauReportData bureauReportData) {
    
    this.bureauReportData = bureauReportData;
    return this;
  }

   /**
   * Get bureauReportData
   * @return bureauReportData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ResponseCreateTrancheBureauReportData getBureauReportData() {
    return bureauReportData;
  }


  public void setBureauReportData(ResponseCreateTrancheBureauReportData bureauReportData) {
    this.bureauReportData = bureauReportData;
  }


  public BodyCreateTranche clientLoanId(String clientLoanId) {
    
    this.clientLoanId = clientLoanId;
    return this;
  }

   /**
   * Loan ID as per Partner&amp;#39;s LMS
   * @return clientLoanId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Loan ID as per Partner&#39;s LMS")

  public String getClientLoanId() {
    return clientLoanId;
  }


  public void setClientLoanId(String clientLoanId) {
    this.clientLoanId = clientLoanId;
  }


  public BodyCreateTranche businessData(ResponseCreateTrancheBusinessData businessData) {
    
    this.businessData = businessData;
    return this;
  }

   /**
   * Get businessData
   * @return businessData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ResponseCreateTrancheBusinessData getBusinessData() {
    return businessData;
  }


  public void setBusinessData(ResponseCreateTrancheBusinessData businessData) {
    this.businessData = businessData;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BodyCreateTranche bodyCreateTranche = (BodyCreateTranche) o;
    return Objects.equals(this.trancheNumber, bodyCreateTranche.trancheNumber) &&
        Objects.equals(this.principalAmount, bodyCreateTranche.principalAmount) &&
        Objects.equals(this.differentialInterest, bodyCreateTranche.differentialInterest) &&
        Objects.equals(this.interestStartDate, bodyCreateTranche.interestStartDate) &&
        Objects.equals(this.processingFee, bodyCreateTranche.processingFee) &&
        Objects.equals(this.stampDuty, bodyCreateTranche.stampDuty) &&
        Objects.equals(this.insuranceCharges, bodyCreateTranche.insuranceCharges) &&
        Objects.equals(this.documentationCharges, bodyCreateTranche.documentationCharges) &&
        Objects.equals(this.otherCharges, bodyCreateTranche.otherCharges) &&
        Objects.equals(this.closingLoanPrincipal, bodyCreateTranche.closingLoanPrincipal) &&
        Objects.equals(this.trancheDocLink, bodyCreateTranche.trancheDocLink) &&
        Objects.equals(this.trancheDocLinkPassword, bodyCreateTranche.trancheDocLinkPassword) &&
        Objects.equals(this.disbursementAccounts, bodyCreateTranche.disbursementAccounts) &&
        Objects.equals(this.loanData, bodyCreateTranche.loanData) &&
        Objects.equals(this.bureauReportData, bodyCreateTranche.bureauReportData) &&
        Objects.equals(this.clientLoanId, bodyCreateTranche.clientLoanId) &&
        Objects.equals(this.businessData, bodyCreateTranche.businessData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trancheNumber, principalAmount, differentialInterest, interestStartDate, processingFee, stampDuty, insuranceCharges, documentationCharges, otherCharges, closingLoanPrincipal, trancheDocLink, trancheDocLinkPassword, disbursementAccounts, loanData, bureauReportData, clientLoanId, businessData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BodyCreateTranche {\n");
    sb.append("    trancheNumber: ").append(toIndentedString(trancheNumber)).append("\n");
    sb.append("    principalAmount: ").append(toIndentedString(principalAmount)).append("\n");
    sb.append("    differentialInterest: ").append(toIndentedString(differentialInterest)).append("\n");
    sb.append("    interestStartDate: ").append(toIndentedString(interestStartDate)).append("\n");
    sb.append("    processingFee: ").append(toIndentedString(processingFee)).append("\n");
    sb.append("    stampDuty: ").append(toIndentedString(stampDuty)).append("\n");
    sb.append("    insuranceCharges: ").append(toIndentedString(insuranceCharges)).append("\n");
    sb.append("    documentationCharges: ").append(toIndentedString(documentationCharges)).append("\n");
    sb.append("    otherCharges: ").append(toIndentedString(otherCharges)).append("\n");
    sb.append("    closingLoanPrincipal: ").append(toIndentedString(closingLoanPrincipal)).append("\n");
    sb.append("    trancheDocLink: ").append(toIndentedString(trancheDocLink)).append("\n");
    sb.append("    trancheDocLinkPassword: ").append(toIndentedString(trancheDocLinkPassword)).append("\n");
    sb.append("    disbursementAccounts: ").append(toIndentedString(disbursementAccounts)).append("\n");
    sb.append("    loanData: ").append(toIndentedString(loanData)).append("\n");
    sb.append("    bureauReportData: ").append(toIndentedString(bureauReportData)).append("\n");
    sb.append("    clientLoanId: ").append(toIndentedString(clientLoanId)).append("\n");
    sb.append("    businessData: ").append(toIndentedString(businessData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

