/*
 * Allcloud (Allcloud)
 * # Integration Document  The following are the endpoints to be called during and pre/post disbursement state of a loan.  ## Authentication  Authentication details and host will be shared privately.  ## Workflow  **Create Loan** is the initial endpoint to be called to create a loan. Loan will be processed in the background and the status of loan will be provided through the configured Webhook. However, the client can also poll the server via the **Get Loan Details** endpoint to know the loan's status(**Get Loan Details** is rate throttled and polling this API will be restricted). Loan's shall be considered rejected if proper response is not available within 10minutes.  All other endpoints are self-explanatory and can be retried upto 3 times before marking as failure.  ## Allowed Links  All Link attributes should contain 1. Accessible File Link URL which can be Public/Expiry URL/Whitelisted File Server Link(Write to tech.colending@credavenue.com for obtaining our IP address to whitelist) 2. File Link URL with Header Authentication (Header values should be shared with tech.colending@credavenue.com)  ## Allowed Fields Length <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">  <colgroup>  <col  class=\"org-left\" />  <col  class=\"org-left\" />  </colgroup> <thead> <tr> <th scope=\"col\" class=\"org-left\">Data Type</th> <th scope=\"col\" class=\"org-left\">Max Length</th> </tr> </thead>  <tbody> <tr> <td class=\"org-left\">String</td> <td class=\"org-left\">65,535 bytes</td> </tr>  <tr> <td class=\"org-left\">Float</td> <td class=\"org-left\">8 bytes</td> </tr>  <tr> <td class=\"org-left\">Integer</td> <td class=\"org-left\">4 bytes</td> </tr>  <tr> <td class=\"org-left\">Date</td> <td class=\"org-left\">10 characters</td> </tr>  </tbody> </table>  # Webhooks  Webhooks can be configured for the below events  1. Loan status change      Response Payload :      {         \"product_id\": \"\",         \"client_loan_id\": \"\",         \"principal_amount\": \"\",         \"interest_rate\": \"\",         \"tenure\": \"\",         \"tenure_frequency\": \"MONTHLY\",         \"cibil_score\": \"\",         \"purpose\": \"\",         \"repayment_frequency\":\"\",         \"number_of_repayments\": \"\",         \"status\": \"\",         \"principal_outstanding\": \"\",         \"reject_reason\": \"\"     }          Statuses : ['new', 'approved', 'rejected', 'agreement_signed', 'dropped', 'disbursement_ready', 'disbursed', 'matured', 'partner_settled']     2. Loan disbursement details (Disbursed through razorpay)      Callback Payload:      {         \"client_loan_id\":\"\",         \"status\":\"borrower_disbursed\",         \"disbursed_date\":\"\",         \"utr_number\":\"\",         \"disbursement_type\":\"\",         \"payment_reversed\": \"TRUE/FALSE\",         \"disbursement_amount\":\"\",         \"investor_disbursed_amount\": \"\",         \"partner_disbursed_amount\": \"\",         \"differential_interest\":\"\",         \"investor_differential_interest\":\"\",         \"partner_differential_interest\":\"\",         \"differential_days\":\"\",         \"interest_start_date\":\"\",         \"investor_processing_fee\":\"\",         \"partner_processing_fee\":\"\",         \"investor_stamp_duty\":\"\",         \"partner_stamp_duty\":\"\",         \"investor_documentation_charges\":\"\",         \"partner_documentation_charges\":\"\"     }  Provide the following details to configure the webhooks 1. callback URL 2. authentication for the callback URL (header authentication)    # Validations  **PAN**  - **Example**: ABGPA1232P - **Sequence**: First five digits will be alpha, next four will be Numerical and again last single digit will be alpha  **GSTIN**  - **Example**: 33AAACT2727Q1ZV - **Sequence**: First two digits is Numerical, Next is PAN sequence as specified above, again thirteenth digit will be numerical, fourteenth digit is alpha, last digit will be alpha or numerical  **CIN**  - **Example**: U65929TN2017PTC117196 - **Sequence**: First digit is Alpha, next 5 numeric digits, next two alpha, next set of 4 numeric digits, Next 3 alpha, last 6 numeric digits  **PASSPORT**  - **Example**: A2096457 - **Sequence**: Total 8 digits, first digit is Alpha, remaining digits are numerical  **AADHAR NO**  - The standard 12 digits numerical.  **MOBILE NO**  - **Sequence**: 10 numerical digits  **IFSC CODE**  - **Example**: PUNB0596600 - **Sequence**: First four alpha, next fifth digit is 0 (zero) always and last six digit is alpha/numeric. Totally 11 digits.  **PIN CODE**  - 6 numerical digits
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@colending.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.LocalDate;

/**
 * Refer table DisbursementAccounts for attributes
 */
@ApiModel(description = "Refer table DisbursementAccounts for attributes")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-06T13:00:59.364702+05:30[Asia/Kolkata]")
public class BodyCreateLoanDisbursementAccounts {
  public static final String SERIALIZED_NAME_ACCOUNT_TYPE = "account_type";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TYPE)
  private String accountType;

  public static final String SERIALIZED_NAME_BANK_NAME = "bank_name";
  @SerializedName(SERIALIZED_NAME_BANK_NAME)
  private String bankName;

  public static final String SERIALIZED_NAME_BANK_ACCOUNT_TYPE = "bank_account_type";
  @SerializedName(SERIALIZED_NAME_BANK_ACCOUNT_TYPE)
  private String bankAccountType;

  public static final String SERIALIZED_NAME_ACCOUNT_NAME = "account_name";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NAME)
  private String accountName;

  public static final String SERIALIZED_NAME_DATE_OF_BANK_ACCOUNT_OPENING = "date_of_bank_account_opening";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BANK_ACCOUNT_OPENING)
  private LocalDate dateOfBankAccountOpening;

  public static final String SERIALIZED_NAME_BANK_BRANCH_NAME = "bank_branch_name";
  @SerializedName(SERIALIZED_NAME_BANK_BRANCH_NAME)
  private String bankBranchName;

  public static final String SERIALIZED_NAME_IFSC_CODE = "ifsc_code";
  @SerializedName(SERIALIZED_NAME_IFSC_CODE)
  private String ifscCode;

  public static final String SERIALIZED_NAME_ENTITY_TYPE = "entity_type";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE)
  private String entityType;

  public static final String SERIALIZED_NAME_ACCOUNT_NO = "account_no";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NO)
  private String accountNo;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Float amount;


  public BodyCreateLoanDisbursementAccounts accountType(String accountType) {
    
    this.accountType = accountType;
    return this;
  }

   /**
   * borrower / existing_lender / dealer / sub_dealer / seller / financier
   * @return accountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "borrower / existing_lender / dealer / sub_dealer / seller / financier")

  public String getAccountType() {
    return accountType;
  }


  public void setAccountType(String accountType) {
    this.accountType = accountType;
  }


  public BodyCreateLoanDisbursementAccounts bankName(String bankName) {
    
    this.bankName = bankName;
    return this;
  }

   /**
   * Name of the bank where disbursement needs to be done
   * @return bankName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the bank where disbursement needs to be done")

  public String getBankName() {
    return bankName;
  }


  public void setBankName(String bankName) {
    this.bankName = bankName;
  }


  public BodyCreateLoanDisbursementAccounts bankAccountType(String bankAccountType) {
    
    this.bankAccountType = bankAccountType;
    return this;
  }

   /**
   * Account type - Savings/Current/Overdraft/CC
   * @return bankAccountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Account type - Savings/Current/Overdraft/CC")

  public String getBankAccountType() {
    return bankAccountType;
  }


  public void setBankAccountType(String bankAccountType) {
    this.bankAccountType = bankAccountType;
  }


  public BodyCreateLoanDisbursementAccounts accountName(String accountName) {
    
    this.accountName = accountName;
    return this;
  }

   /**
   * Bank account name where disbursement needs to be done
   * @return accountName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Bank account name where disbursement needs to be done")

  public String getAccountName() {
    return accountName;
  }


  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }


  public BodyCreateLoanDisbursementAccounts dateOfBankAccountOpening(LocalDate dateOfBankAccountOpening) {
    
    this.dateOfBankAccountOpening = dateOfBankAccountOpening;
    return this;
  }

   /**
   * Date on which the bank account is opened
   * @return dateOfBankAccountOpening
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date on which the bank account is opened")

  public LocalDate getDateOfBankAccountOpening() {
    return dateOfBankAccountOpening;
  }


  public void setDateOfBankAccountOpening(LocalDate dateOfBankAccountOpening) {
    this.dateOfBankAccountOpening = dateOfBankAccountOpening;
  }


  public BodyCreateLoanDisbursementAccounts bankBranchName(String bankBranchName) {
    
    this.bankBranchName = bankBranchName;
    return this;
  }

   /**
   * Bank branch name where disbursement needs to be done
   * @return bankBranchName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Bank branch name where disbursement needs to be done")

  public String getBankBranchName() {
    return bankBranchName;
  }


  public void setBankBranchName(String bankBranchName) {
    this.bankBranchName = bankBranchName;
  }


  public BodyCreateLoanDisbursementAccounts ifscCode(String ifscCode) {
    
    this.ifscCode = ifscCode;
    return this;
  }

   /**
   * Bank IFSC where disbursement needs to be done
   * @return ifscCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Bank IFSC where disbursement needs to be done")

  public String getIfscCode() {
    return ifscCode;
  }


  public void setIfscCode(String ifscCode) {
    this.ifscCode = ifscCode;
  }


  public BodyCreateLoanDisbursementAccounts entityType(String entityType) {
    
    this.entityType = entityType;
    return this;
  }

   /**
   * dealer / sub_dealer / originator / existing_lender / end_customer
   * @return entityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "dealer / sub_dealer / originator / existing_lender / end_customer")

  public String getEntityType() {
    return entityType;
  }


  public void setEntityType(String entityType) {
    this.entityType = entityType;
  }


  public BodyCreateLoanDisbursementAccounts accountNo(String accountNo) {
    
    this.accountNo = accountNo;
    return this;
  }

   /**
   * Account number of the bank where disbursement needs to be done
   * @return accountNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Account number of the bank where disbursement needs to be done")

  public String getAccountNo() {
    return accountNo;
  }


  public void setAccountNo(String accountNo) {
    this.accountNo = accountNo;
  }


  public BodyCreateLoanDisbursementAccounts amount(Float amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Amount to be transferred to particular Vendor/Borrower
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Amount to be transferred to particular Vendor/Borrower")

  public Float getAmount() {
    return amount;
  }


  public void setAmount(Float amount) {
    this.amount = amount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BodyCreateLoanDisbursementAccounts bodyCreateLoanDisbursementAccounts = (BodyCreateLoanDisbursementAccounts) o;
    return Objects.equals(this.accountType, bodyCreateLoanDisbursementAccounts.accountType) &&
        Objects.equals(this.bankName, bodyCreateLoanDisbursementAccounts.bankName) &&
        Objects.equals(this.bankAccountType, bodyCreateLoanDisbursementAccounts.bankAccountType) &&
        Objects.equals(this.accountName, bodyCreateLoanDisbursementAccounts.accountName) &&
        Objects.equals(this.dateOfBankAccountOpening, bodyCreateLoanDisbursementAccounts.dateOfBankAccountOpening) &&
        Objects.equals(this.bankBranchName, bodyCreateLoanDisbursementAccounts.bankBranchName) &&
        Objects.equals(this.ifscCode, bodyCreateLoanDisbursementAccounts.ifscCode) &&
        Objects.equals(this.entityType, bodyCreateLoanDisbursementAccounts.entityType) &&
        Objects.equals(this.accountNo, bodyCreateLoanDisbursementAccounts.accountNo) &&
        Objects.equals(this.amount, bodyCreateLoanDisbursementAccounts.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountType, bankName, bankAccountType, accountName, dateOfBankAccountOpening, bankBranchName, ifscCode, entityType, accountNo, amount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BodyCreateLoanDisbursementAccounts {\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    bankName: ").append(toIndentedString(bankName)).append("\n");
    sb.append("    bankAccountType: ").append(toIndentedString(bankAccountType)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    dateOfBankAccountOpening: ").append(toIndentedString(dateOfBankAccountOpening)).append("\n");
    sb.append("    bankBranchName: ").append(toIndentedString(bankBranchName)).append("\n");
    sb.append("    ifscCode: ").append(toIndentedString(ifscCode)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    accountNo: ").append(toIndentedString(accountNo)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

