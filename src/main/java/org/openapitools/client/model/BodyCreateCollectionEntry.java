/*
 * Allcloud (Allcloud)
 * # Integration Document  The following are the endpoints to be called during and pre/post disbursement state of a loan.  ## Authentication  Authentication details and host will be shared privately.  ## Workflow  **Create Loan** is the initial endpoint to be called to create a loan. Loan will be processed in the background and the status of loan will be provided through the configured Webhook. However, the client can also poll the server via the **Get Loan Details** endpoint to know the loan's status(**Get Loan Details** is rate throttled and polling this API will be restricted). Loan's shall be considered rejected if proper response is not available within 10minutes.  All other endpoints are self-explanatory and can be retried upto 3 times before marking as failure.  ## Allowed Links  All Link attributes should contain 1. Accessible File Link URL which can be Public/Expiry URL/Whitelisted File Server Link(Write to tech.colending@credavenue.com for obtaining our IP address to whitelist) 2. File Link URL with Header Authentication (Header values should be shared with tech.colending@credavenue.com)  ## Allowed Fields Length <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">  <colgroup>  <col  class=\"org-left\" />  <col  class=\"org-left\" />  </colgroup> <thead> <tr> <th scope=\"col\" class=\"org-left\">Data Type</th> <th scope=\"col\" class=\"org-left\">Max Length</th> </tr> </thead>  <tbody> <tr> <td class=\"org-left\">String</td> <td class=\"org-left\">65,535 bytes</td> </tr>  <tr> <td class=\"org-left\">Float</td> <td class=\"org-left\">8 bytes</td> </tr>  <tr> <td class=\"org-left\">Integer</td> <td class=\"org-left\">4 bytes</td> </tr>  <tr> <td class=\"org-left\">Date</td> <td class=\"org-left\">10 characters</td> </tr>  </tbody> </table>  # Webhooks  Webhooks can be configured for the below events  1. Loan status change      Response Payload :      {         \"product_id\": \"\",         \"client_loan_id\": \"\",         \"principal_amount\": \"\",         \"interest_rate\": \"\",         \"tenure\": \"\",         \"tenure_frequency\": \"MONTHLY\",         \"cibil_score\": \"\",         \"purpose\": \"\",         \"repayment_frequency\":\"\",         \"number_of_repayments\": \"\",         \"status\": \"\",         \"principal_outstanding\": \"\",         \"reject_reason\": \"\"     }          Statuses : ['new', 'approved', 'rejected', 'agreement_signed', 'dropped', 'disbursement_ready', 'disbursed', 'matured', 'partner_settled']     2. Loan disbursement details (Disbursed through razorpay)      Callback Payload:      {         \"client_loan_id\":\"\",         \"status\":\"borrower_disbursed\",         \"disbursed_date\":\"\",         \"utr_number\":\"\",         \"disbursement_type\":\"\",         \"payment_reversed\": \"TRUE/FALSE\",         \"disbursement_amount\":\"\",         \"investor_disbursed_amount\": \"\",         \"partner_disbursed_amount\": \"\",         \"differential_interest\":\"\",         \"investor_differential_interest\":\"\",         \"partner_differential_interest\":\"\",         \"differential_days\":\"\",         \"interest_start_date\":\"\",         \"investor_processing_fee\":\"\",         \"partner_processing_fee\":\"\",         \"investor_stamp_duty\":\"\",         \"partner_stamp_duty\":\"\",         \"investor_documentation_charges\":\"\",         \"partner_documentation_charges\":\"\"     }  Provide the following details to configure the webhooks 1. callback URL 2. authentication for the callback URL (header authentication)    # Validations  **PAN**  - **Example**: ABGPA1232P - **Sequence**: First five digits will be alpha, next four will be Numerical and again last single digit will be alpha  **GSTIN**  - **Example**: 33AAACT2727Q1ZV - **Sequence**: First two digits is Numerical, Next is PAN sequence as specified above, again thirteenth digit will be numerical, fourteenth digit is alpha, last digit will be alpha or numerical  **CIN**  - **Example**: U65929TN2017PTC117196 - **Sequence**: First digit is Alpha, next 5 numeric digits, next two alpha, next set of 4 numeric digits, Next 3 alpha, last 6 numeric digits  **PASSPORT**  - **Example**: A2096457 - **Sequence**: Total 8 digits, first digit is Alpha, remaining digits are numerical  **AADHAR NO**  - The standard 12 digits numerical.  **MOBILE NO**  - **Sequence**: 10 numerical digits  **IFSC CODE**  - **Example**: PUNB0596600 - **Sequence**: First four alpha, next fifth digit is 0 (zero) always and last six digit is alpha/numeric. Totally 11 digits.  **PIN CODE**  - 6 numerical digits
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@colending.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.BodyCreateCollectionEntryUpdatedRs;
import org.threeten.bp.LocalDate;

/**
 * BodyCreateCollectionEntry
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-06T13:00:59.364702+05:30[Asia/Kolkata]")
public class BodyCreateCollectionEntry {
  public static final String SERIALIZED_NAME_INSTALLMENT_NO = "installment_no";
  @SerializedName(SERIALIZED_NAME_INSTALLMENT_NO)
  private Integer installmentNo;

  public static final String SERIALIZED_NAME_DUE_DATE = "due_date";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private LocalDate dueDate;

  public static final String SERIALIZED_NAME_PRINCIPAL = "principal";
  @SerializedName(SERIALIZED_NAME_PRINCIPAL)
  private Float principal;

  public static final String SERIALIZED_NAME_INTEREST = "interest";
  @SerializedName(SERIALIZED_NAME_INTEREST)
  private Float interest;

  public static final String SERIALIZED_NAME_OTHER_CHARGES = "other_charges";
  @SerializedName(SERIALIZED_NAME_OTHER_CHARGES)
  private Float otherCharges;

  public static final String SERIALIZED_NAME_OVERDUE_CHARGES = "overdue_charges";
  @SerializedName(SERIALIZED_NAME_OVERDUE_CHARGES)
  private Float overdueCharges;

  public static final String SERIALIZED_NAME_PENALTY_CHARGES = "penalty_charges";
  @SerializedName(SERIALIZED_NAME_PENALTY_CHARGES)
  private Float penaltyCharges;

  public static final String SERIALIZED_NAME_FEE_CHARGES = "fee_charges";
  @SerializedName(SERIALIZED_NAME_FEE_CHARGES)
  private Float feeCharges;

  public static final String SERIALIZED_NAME_BOUNCE_CHARGES = "bounce_charges";
  @SerializedName(SERIALIZED_NAME_BOUNCE_CHARGES)
  private Float bounceCharges;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Float amount;

  public static final String SERIALIZED_NAME_PAID_DATE = "paid_date";
  @SerializedName(SERIALIZED_NAME_PAID_DATE)
  private LocalDate paidDate;

  public static final String SERIALIZED_NAME_INVESTOR_TRANSFER_DATE = "investor_transfer_date";
  @SerializedName(SERIALIZED_NAME_INVESTOR_TRANSFER_DATE)
  private LocalDate investorTransferDate;

  public static final String SERIALIZED_NAME_REFERENCE_NO = "reference_no";
  @SerializedName(SERIALIZED_NAME_REFERENCE_NO)
  private String referenceNo;

  public static final String SERIALIZED_NAME_INSTRUMENT_TYPE = "instrument_type";
  @SerializedName(SERIALIZED_NAME_INSTRUMENT_TYPE)
  private String instrumentType;

  public static final String SERIALIZED_NAME_EMI_CLOSED = "emi_closed";
  @SerializedName(SERIALIZED_NAME_EMI_CLOSED)
  private String emiClosed;

  public static final String SERIALIZED_NAME_FORECLOSURE = "foreclosure";
  @SerializedName(SERIALIZED_NAME_FORECLOSURE)
  private String foreclosure;

  public static final String SERIALIZED_NAME_PAYMENT_TYPE = "payment_type";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TYPE)
  private String paymentType;

  public static final String SERIALIZED_NAME_POS = "pos";
  @SerializedName(SERIALIZED_NAME_POS)
  private Float pos;

  public static final String SERIALIZED_NAME_UPDATED_RS = "updated_rs";
  @SerializedName(SERIALIZED_NAME_UPDATED_RS)
  private List<BodyCreateCollectionEntryUpdatedRs> updatedRs = null;


  public BodyCreateCollectionEntry installmentNo(Integer installmentNo) {
    
    this.installmentNo = installmentNo;
    return this;
  }

   /**
   * Installment Number
   * @return installmentNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Installment Number")

  public Integer getInstallmentNo() {
    return installmentNo;
  }


  public void setInstallmentNo(Integer installmentNo) {
    this.installmentNo = installmentNo;
  }


  public BodyCreateCollectionEntry dueDate(LocalDate dueDate) {
    
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Due Date for the Installment (YYYY-MM-DD)
   * @return dueDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Due Date for the Installment (YYYY-MM-DD)")

  public LocalDate getDueDate() {
    return dueDate;
  }


  public void setDueDate(LocalDate dueDate) {
    this.dueDate = dueDate;
  }


  public BodyCreateCollectionEntry principal(Float principal) {
    
    this.principal = principal;
    return this;
  }

   /**
   * Total principal amount paid for this installment
   * @return principal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total principal amount paid for this installment")

  public Float getPrincipal() {
    return principal;
  }


  public void setPrincipal(Float principal) {
    this.principal = principal;
  }


  public BodyCreateCollectionEntry interest(Float interest) {
    
    this.interest = interest;
    return this;
  }

   /**
   * Total interest amount paid for this installement
   * @return interest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total interest amount paid for this installement")

  public Float getInterest() {
    return interest;
  }


  public void setInterest(Float interest) {
    this.interest = interest;
  }


  public BodyCreateCollectionEntry otherCharges(Float otherCharges) {
    
    this.otherCharges = otherCharges;
    return this;
  }

   /**
   * Other Charges
   * @return otherCharges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Other Charges")

  public Float getOtherCharges() {
    return otherCharges;
  }


  public void setOtherCharges(Float otherCharges) {
    this.otherCharges = otherCharges;
  }


  public BodyCreateCollectionEntry overdueCharges(Float overdueCharges) {
    
    this.overdueCharges = overdueCharges;
    return this;
  }

   /**
   * Total overdue interest paid
   * @return overdueCharges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total overdue interest paid")

  public Float getOverdueCharges() {
    return overdueCharges;
  }


  public void setOverdueCharges(Float overdueCharges) {
    this.overdueCharges = overdueCharges;
  }


  public BodyCreateCollectionEntry penaltyCharges(Float penaltyCharges) {
    
    this.penaltyCharges = penaltyCharges;
    return this;
  }

   /**
   * Penalty Charges Paid
   * @return penaltyCharges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Penalty Charges Paid")

  public Float getPenaltyCharges() {
    return penaltyCharges;
  }


  public void setPenaltyCharges(Float penaltyCharges) {
    this.penaltyCharges = penaltyCharges;
  }


  public BodyCreateCollectionEntry feeCharges(Float feeCharges) {
    
    this.feeCharges = feeCharges;
    return this;
  }

   /**
   * Fee Charges Paid
   * @return feeCharges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fee Charges Paid")

  public Float getFeeCharges() {
    return feeCharges;
  }


  public void setFeeCharges(Float feeCharges) {
    this.feeCharges = feeCharges;
  }


  public BodyCreateCollectionEntry bounceCharges(Float bounceCharges) {
    
    this.bounceCharges = bounceCharges;
    return this;
  }

   /**
   * Bounce charges paid
   * @return bounceCharges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Bounce charges paid")

  public Float getBounceCharges() {
    return bounceCharges;
  }


  public void setBounceCharges(Float bounceCharges) {
    this.bounceCharges = bounceCharges;
  }


  public BodyCreateCollectionEntry amount(Float amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Total Collection Amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total Collection Amount")

  public Float getAmount() {
    return amount;
  }


  public void setAmount(Float amount) {
    this.amount = amount;
  }


  public BodyCreateCollectionEntry paidDate(LocalDate paidDate) {
    
    this.paidDate = paidDate;
    return this;
  }

   /**
   * Date when customer paid the amount (YYYY-MM-DD)
   * @return paidDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date when customer paid the amount (YYYY-MM-DD)")

  public LocalDate getPaidDate() {
    return paidDate;
  }


  public void setPaidDate(LocalDate paidDate) {
    this.paidDate = paidDate;
  }


  public BodyCreateCollectionEntry investorTransferDate(LocalDate investorTransferDate) {
    
    this.investorTransferDate = investorTransferDate;
    return this;
  }

   /**
   * Date when originator transferred the amount to investor (YYYY-MM-DD)
   * @return investorTransferDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date when originator transferred the amount to investor (YYYY-MM-DD)")

  public LocalDate getInvestorTransferDate() {
    return investorTransferDate;
  }


  public void setInvestorTransferDate(LocalDate investorTransferDate) {
    this.investorTransferDate = investorTransferDate;
  }


  public BodyCreateCollectionEntry referenceNo(String referenceNo) {
    
    this.referenceNo = referenceNo;
    return this;
  }

   /**
   * Instrument Number of the collection received
   * @return referenceNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Instrument Number of the collection received")

  public String getReferenceNo() {
    return referenceNo;
  }


  public void setReferenceNo(String referenceNo) {
    this.referenceNo = referenceNo;
  }


  public BodyCreateCollectionEntry instrumentType(String instrumentType) {
    
    this.instrumentType = instrumentType;
    return this;
  }

   /**
   * Instrument Type of the collection received
   * @return instrumentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Instrument Type of the collection received")

  public String getInstrumentType() {
    return instrumentType;
  }


  public void setInstrumentType(String instrumentType) {
    this.instrumentType = instrumentType;
  }


  public BodyCreateCollectionEntry emiClosed(String emiClosed) {
    
    this.emiClosed = emiClosed;
    return this;
  }

   /**
   * Y / N. Input Y if the installment is closed.
   * @return emiClosed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Y / N. Input Y if the installment is closed.")

  public String getEmiClosed() {
    return emiClosed;
  }


  public void setEmiClosed(String emiClosed) {
    this.emiClosed = emiClosed;
  }


  public BodyCreateCollectionEntry foreclosure(String foreclosure) {
    
    this.foreclosure = foreclosure;
    return this;
  }

   /**
   * Y / N. Input Y if the loan is foreclosed.
   * @return foreclosure
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Y / N. Input Y if the loan is foreclosed.")

  public String getForeclosure() {
    return foreclosure;
  }


  public void setForeclosure(String foreclosure) {
    this.foreclosure = foreclosure;
  }


  public BodyCreateCollectionEntry paymentType(String paymentType) {
    
    this.paymentType = paymentType;
    return this;
  }

   /**
   * Normal / Part / Advance
   * @return paymentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Normal / Part / Advance")

  public String getPaymentType() {
    return paymentType;
  }


  public void setPaymentType(String paymentType) {
    this.paymentType = paymentType;
  }


  public BodyCreateCollectionEntry pos(Float pos) {
    
    this.pos = pos;
    return this;
  }

   /**
   * Before the collection record to mention pos for that loan
   * @return pos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Before the collection record to mention pos for that loan")

  public Float getPos() {
    return pos;
  }


  public void setPos(Float pos) {
    this.pos = pos;
  }


  public BodyCreateCollectionEntry updatedRs(List<BodyCreateCollectionEntryUpdatedRs> updatedRs) {
    
    this.updatedRs = updatedRs;
    return this;
  }

  public BodyCreateCollectionEntry addUpdatedRsItem(BodyCreateCollectionEntryUpdatedRs updatedRsItem) {
    if (this.updatedRs == null) {
      this.updatedRs = new ArrayList<BodyCreateCollectionEntryUpdatedRs>();
    }
    this.updatedRs.add(updatedRsItem);
    return this;
  }

   /**
   * Refer table UpdatedRs for attributes
   * @return updatedRs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Refer table UpdatedRs for attributes")

  public List<BodyCreateCollectionEntryUpdatedRs> getUpdatedRs() {
    return updatedRs;
  }


  public void setUpdatedRs(List<BodyCreateCollectionEntryUpdatedRs> updatedRs) {
    this.updatedRs = updatedRs;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BodyCreateCollectionEntry bodyCreateCollectionEntry = (BodyCreateCollectionEntry) o;
    return Objects.equals(this.installmentNo, bodyCreateCollectionEntry.installmentNo) &&
        Objects.equals(this.dueDate, bodyCreateCollectionEntry.dueDate) &&
        Objects.equals(this.principal, bodyCreateCollectionEntry.principal) &&
        Objects.equals(this.interest, bodyCreateCollectionEntry.interest) &&
        Objects.equals(this.otherCharges, bodyCreateCollectionEntry.otherCharges) &&
        Objects.equals(this.overdueCharges, bodyCreateCollectionEntry.overdueCharges) &&
        Objects.equals(this.penaltyCharges, bodyCreateCollectionEntry.penaltyCharges) &&
        Objects.equals(this.feeCharges, bodyCreateCollectionEntry.feeCharges) &&
        Objects.equals(this.bounceCharges, bodyCreateCollectionEntry.bounceCharges) &&
        Objects.equals(this.amount, bodyCreateCollectionEntry.amount) &&
        Objects.equals(this.paidDate, bodyCreateCollectionEntry.paidDate) &&
        Objects.equals(this.investorTransferDate, bodyCreateCollectionEntry.investorTransferDate) &&
        Objects.equals(this.referenceNo, bodyCreateCollectionEntry.referenceNo) &&
        Objects.equals(this.instrumentType, bodyCreateCollectionEntry.instrumentType) &&
        Objects.equals(this.emiClosed, bodyCreateCollectionEntry.emiClosed) &&
        Objects.equals(this.foreclosure, bodyCreateCollectionEntry.foreclosure) &&
        Objects.equals(this.paymentType, bodyCreateCollectionEntry.paymentType) &&
        Objects.equals(this.pos, bodyCreateCollectionEntry.pos) &&
        Objects.equals(this.updatedRs, bodyCreateCollectionEntry.updatedRs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(installmentNo, dueDate, principal, interest, otherCharges, overdueCharges, penaltyCharges, feeCharges, bounceCharges, amount, paidDate, investorTransferDate, referenceNo, instrumentType, emiClosed, foreclosure, paymentType, pos, updatedRs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BodyCreateCollectionEntry {\n");
    sb.append("    installmentNo: ").append(toIndentedString(installmentNo)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    principal: ").append(toIndentedString(principal)).append("\n");
    sb.append("    interest: ").append(toIndentedString(interest)).append("\n");
    sb.append("    otherCharges: ").append(toIndentedString(otherCharges)).append("\n");
    sb.append("    overdueCharges: ").append(toIndentedString(overdueCharges)).append("\n");
    sb.append("    penaltyCharges: ").append(toIndentedString(penaltyCharges)).append("\n");
    sb.append("    feeCharges: ").append(toIndentedString(feeCharges)).append("\n");
    sb.append("    bounceCharges: ").append(toIndentedString(bounceCharges)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    paidDate: ").append(toIndentedString(paidDate)).append("\n");
    sb.append("    investorTransferDate: ").append(toIndentedString(investorTransferDate)).append("\n");
    sb.append("    referenceNo: ").append(toIndentedString(referenceNo)).append("\n");
    sb.append("    instrumentType: ").append(toIndentedString(instrumentType)).append("\n");
    sb.append("    emiClosed: ").append(toIndentedString(emiClosed)).append("\n");
    sb.append("    foreclosure: ").append(toIndentedString(foreclosure)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    pos: ").append(toIndentedString(pos)).append("\n");
    sb.append("    updatedRs: ").append(toIndentedString(updatedRs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

