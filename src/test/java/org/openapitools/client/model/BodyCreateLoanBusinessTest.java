/*
 * Allcloud (Allcloud)
 * # Integration Document  The following are the endpoints to be called during and pre/post disbursement state of a loan.  ## Authentication  Authentication details and host will be shared privately.  ## Workflow  **Create Loan** is the initial endpoint to be called to create a loan. Loan will be processed in the background and the status of loan will be provided through the configured Webhook. However, the client can also poll the server via the **Get Loan Details** endpoint to know the loan's status(**Get Loan Details** is rate throttled and polling this API will be restricted). Loan's shall be considered rejected if proper response is not available within 10minutes.  All other endpoints are self-explanatory and can be retried upto 3 times before marking as failure.  ## Allowed Links  All Link attributes should contain 1. Accessible File Link URL which can be Public/Expiry URL/Whitelisted File Server Link(Write to tech.colending@credavenue.com for obtaining our IP address to whitelist) 2. File Link URL with Header Authentication (Header values should be shared with tech.colending@credavenue.com)  ## Allowed Fields Length <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">  <colgroup>  <col  class=\"org-left\" />  <col  class=\"org-left\" />  </colgroup> <thead> <tr> <th scope=\"col\" class=\"org-left\">Data Type</th> <th scope=\"col\" class=\"org-left\">Max Length</th> </tr> </thead>  <tbody> <tr> <td class=\"org-left\">String</td> <td class=\"org-left\">65,535 bytes</td> </tr>  <tr> <td class=\"org-left\">Float</td> <td class=\"org-left\">8 bytes</td> </tr>  <tr> <td class=\"org-left\">Integer</td> <td class=\"org-left\">4 bytes</td> </tr>  <tr> <td class=\"org-left\">Date</td> <td class=\"org-left\">10 characters</td> </tr>  </tbody> </table>  # Webhooks  Webhooks can be configured for the below events  1. Loan status change      Response Payload :      {         \"product_id\": \"\",         \"client_loan_id\": \"\",         \"principal_amount\": \"\",         \"interest_rate\": \"\",         \"tenure\": \"\",         \"tenure_frequency\": \"MONTHLY\",         \"cibil_score\": \"\",         \"purpose\": \"\",         \"repayment_frequency\":\"\",         \"number_of_repayments\": \"\",         \"status\": \"\",         \"principal_outstanding\": \"\",         \"reject_reason\": \"\"     }          Statuses : ['new', 'approved', 'rejected', 'agreement_signed', 'dropped', 'disbursement_ready', 'disbursed', 'matured', 'partner_settled']     2. Loan disbursement details (Disbursed through razorpay)      Callback Payload:      {         \"client_loan_id\":\"\",         \"status\":\"borrower_disbursed\",         \"disbursed_date\":\"\",         \"utr_number\":\"\",         \"disbursement_type\":\"\",         \"payment_reversed\": \"TRUE/FALSE\",         \"disbursement_amount\":\"\",         \"investor_disbursed_amount\": \"\",         \"partner_disbursed_amount\": \"\",         \"differential_interest\":\"\",         \"investor_differential_interest\":\"\",         \"partner_differential_interest\":\"\",         \"differential_days\":\"\",         \"interest_start_date\":\"\",         \"investor_processing_fee\":\"\",         \"partner_processing_fee\":\"\",         \"investor_stamp_duty\":\"\",         \"partner_stamp_duty\":\"\",         \"investor_documentation_charges\":\"\",         \"partner_documentation_charges\":\"\"     }  Provide the following details to configure the webhooks 1. callback URL 2. authentication for the callback URL (header authentication)    # Validations  **PAN**  - **Example**: ABGPA1232P - **Sequence**: First five digits will be alpha, next four will be Numerical and again last single digit will be alpha  **GSTIN**  - **Example**: 33AAACT2727Q1ZV - **Sequence**: First two digits is Numerical, Next is PAN sequence as specified above, again thirteenth digit will be numerical, fourteenth digit is alpha, last digit will be alpha or numerical  **CIN**  - **Example**: U65929TN2017PTC117196 - **Sequence**: First digit is Alpha, next 5 numeric digits, next two alpha, next set of 4 numeric digits, Next 3 alpha, last 6 numeric digits  **PASSPORT**  - **Example**: A2096457 - **Sequence**: Total 8 digits, first digit is Alpha, remaining digits are numerical  **AADHAR NO**  - The standard 12 digits numerical.  **MOBILE NO**  - **Sequence**: 10 numerical digits  **IFSC CODE**  - **Example**: PUNB0596600 - **Sequence**: First four alpha, next fifth digit is 0 (zero) always and last six digit is alpha/numeric. Totally 11 digits.  **PIN CODE**  - 6 numerical digits
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@colending.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.BodyCreateLoanBusinessPartnershipDetail;
import org.openapitools.client.model.BodyCreateLoanBusinessPartnerships;
import org.openapitools.client.model.BodyCreateLoanBusinessPrivateEntityDetail;
import org.threeten.bp.LocalDate;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for BodyCreateLoanBusiness
 */
public class BodyCreateLoanBusinessTest {
    private final BodyCreateLoanBusiness model = new BodyCreateLoanBusiness();

    /**
     * Model tests for BodyCreateLoanBusiness
     */
    @Test
    public void testBodyCreateLoanBusiness() {
        // TODO: test BodyCreateLoanBusiness
    }

    /**
     * Test the property 'nameOfBusiness'
     */
    @Test
    public void nameOfBusinessTest() {
        // TODO: test nameOfBusiness
    }

    /**
     * Test the property 'natureOfBusiness'
     */
    @Test
    public void natureOfBusinessTest() {
        // TODO: test natureOfBusiness
    }

    /**
     * Test the property 'typeOfConstitution'
     */
    @Test
    public void typeOfConstitutionTest() {
        // TODO: test typeOfConstitution
    }

    /**
     * Test the property 'typeOfOwnership'
     */
    @Test
    public void typeOfOwnershipTest() {
        // TODO: test typeOfOwnership
    }

    /**
     * Test the property 'registrationDate'
     */
    @Test
    public void registrationDateTest() {
        // TODO: test registrationDate
    }

    /**
     * Test the property 'incorporationDate'
     */
    @Test
    public void incorporationDateTest() {
        // TODO: test incorporationDate
    }

    /**
     * Test the property 'industryType'
     */
    @Test
    public void industryTypeTest() {
        // TODO: test industryType
    }

    /**
     * Test the property 'sectorType'
     */
    @Test
    public void sectorTypeTest() {
        // TODO: test sectorType
    }

    /**
     * Test the property 'subSectorType'
     */
    @Test
    public void subSectorTypeTest() {
        // TODO: test subSectorType
    }

    /**
     * Test the property 'businessVintage'
     */
    @Test
    public void businessVintageTest() {
        // TODO: test businessVintage
    }

    /**
     * Test the property 'businessRegisteredOfficeAddress'
     */
    @Test
    public void businessRegisteredOfficeAddressTest() {
        // TODO: test businessRegisteredOfficeAddress
    }

    /**
     * Test the property 'businessRegisteredOfficeDistrict'
     */
    @Test
    public void businessRegisteredOfficeDistrictTest() {
        // TODO: test businessRegisteredOfficeDistrict
    }

    /**
     * Test the property 'businessRegisteredOfficeCity'
     */
    @Test
    public void businessRegisteredOfficeCityTest() {
        // TODO: test businessRegisteredOfficeCity
    }

    /**
     * Test the property 'businessRegisteredOfficeState'
     */
    @Test
    public void businessRegisteredOfficeStateTest() {
        // TODO: test businessRegisteredOfficeState
    }

    /**
     * Test the property 'businessRegisteredOfficePincode'
     */
    @Test
    public void businessRegisteredOfficePincodeTest() {
        // TODO: test businessRegisteredOfficePincode
    }

    /**
     * Test the property 'businessMailingOfficeAddress'
     */
    @Test
    public void businessMailingOfficeAddressTest() {
        // TODO: test businessMailingOfficeAddress
    }

    /**
     * Test the property 'businessMailingOfficeCity'
     */
    @Test
    public void businessMailingOfficeCityTest() {
        // TODO: test businessMailingOfficeCity
    }

    /**
     * Test the property 'businessMailingOfficeState'
     */
    @Test
    public void businessMailingOfficeStateTest() {
        // TODO: test businessMailingOfficeState
    }

    /**
     * Test the property 'businessMailingOfficePincode'
     */
    @Test
    public void businessMailingOfficePincodeTest() {
        // TODO: test businessMailingOfficePincode
    }

    /**
     * Test the property 'businessRegisteredOfficeLink'
     */
    @Test
    public void businessRegisteredOfficeLinkTest() {
        // TODO: test businessRegisteredOfficeLink
    }

    /**
     * Test the property 'businessRegisteredOfficeLinkPassword'
     */
    @Test
    public void businessRegisteredOfficeLinkPasswordTest() {
        // TODO: test businessRegisteredOfficeLinkPassword
    }

    /**
     * Test the property 'businessMailingOfficeLink'
     */
    @Test
    public void businessMailingOfficeLinkTest() {
        // TODO: test businessMailingOfficeLink
    }

    /**
     * Test the property 'businessMailingOfficeLinkPassword'
     */
    @Test
    public void businessMailingOfficeLinkPasswordTest() {
        // TODO: test businessMailingOfficeLinkPassword
    }

    /**
     * Test the property 'businessPhoneNumber'
     */
    @Test
    public void businessPhoneNumberTest() {
        // TODO: test businessPhoneNumber
    }

    /**
     * Test the property 'businessEmailId'
     */
    @Test
    public void businessEmailIdTest() {
        // TODO: test businessEmailId
    }

    /**
     * Test the property 'businessPartnerScore'
     */
    @Test
    public void businessPartnerScoreTest() {
        // TODO: test businessPartnerScore
    }

    /**
     * Test the property 'businessPanNumber'
     */
    @Test
    public void businessPanNumberTest() {
        // TODO: test businessPanNumber
    }

    /**
     * Test the property 'businessPanLink'
     */
    @Test
    public void businessPanLinkTest() {
        // TODO: test businessPanLink
    }

    /**
     * Test the property 'businessPanLinkPassword'
     */
    @Test
    public void businessPanLinkPasswordTest() {
        // TODO: test businessPanLinkPassword
    }

    /**
     * Test the property 'businessRcNumber'
     */
    @Test
    public void businessRcNumberTest() {
        // TODO: test businessRcNumber
    }

    /**
     * Test the property 'businessRcLink'
     */
    @Test
    public void businessRcLinkTest() {
        // TODO: test businessRcLink
    }

    /**
     * Test the property 'businessRcLinkPassword'
     */
    @Test
    public void businessRcLinkPasswordTest() {
        // TODO: test businessRcLinkPassword
    }

    /**
     * Test the property 'businessGstNumber'
     */
    @Test
    public void businessGstNumberTest() {
        // TODO: test businessGstNumber
    }

    /**
     * Test the property 'businessGstCopyLink'
     */
    @Test
    public void businessGstCopyLinkTest() {
        // TODO: test businessGstCopyLink
    }

    /**
     * Test the property 'businessGstCopyLinkPassword'
     */
    @Test
    public void businessGstCopyLinkPasswordTest() {
        // TODO: test businessGstCopyLinkPassword
    }

    /**
     * Test the property 'businessUdyogAadharNumber'
     */
    @Test
    public void businessUdyogAadharNumberTest() {
        // TODO: test businessUdyogAadharNumber
    }

    /**
     * Test the property 'businessUdyogAadharLink'
     */
    @Test
    public void businessUdyogAadharLinkTest() {
        // TODO: test businessUdyogAadharLink
    }

    /**
     * Test the property 'businessUdyogAadharLinkPassword'
     */
    @Test
    public void businessUdyogAadharLinkPasswordTest() {
        // TODO: test businessUdyogAadharLinkPassword
    }

    /**
     * Test the property 'businessSsiNumber'
     */
    @Test
    public void businessSsiNumberTest() {
        // TODO: test businessSsiNumber
    }

    /**
     * Test the property 'businessSsiLink'
     */
    @Test
    public void businessSsiLinkTest() {
        // TODO: test businessSsiLink
    }

    /**
     * Test the property 'businessSsiLinkPassword'
     */
    @Test
    public void businessSsiLinkPasswordTest() {
        // TODO: test businessSsiLinkPassword
    }

    /**
     * Test the property 'businessShopsEstNumber'
     */
    @Test
    public void businessShopsEstNumberTest() {
        // TODO: test businessShopsEstNumber
    }

    /**
     * Test the property 'businessShopsEstLink'
     */
    @Test
    public void businessShopsEstLinkTest() {
        // TODO: test businessShopsEstLink
    }

    /**
     * Test the property 'businessShopsEstLinkPassword'
     */
    @Test
    public void businessShopsEstLinkPasswordTest() {
        // TODO: test businessShopsEstLinkPassword
    }

    /**
     * Test the property 'businessFactoryRegnNumber'
     */
    @Test
    public void businessFactoryRegnNumberTest() {
        // TODO: test businessFactoryRegnNumber
    }

    /**
     * Test the property 'businessFactoryRegnLink'
     */
    @Test
    public void businessFactoryRegnLinkTest() {
        // TODO: test businessFactoryRegnLink
    }

    /**
     * Test the property 'businessFactoryRegnLinkPassword'
     */
    @Test
    public void businessFactoryRegnLinkPasswordTest() {
        // TODO: test businessFactoryRegnLinkPassword
    }

    /**
     * Test the property 'businessTradeLicenseNumber'
     */
    @Test
    public void businessTradeLicenseNumberTest() {
        // TODO: test businessTradeLicenseNumber
    }

    /**
     * Test the property 'businessTradeLicenseLink'
     */
    @Test
    public void businessTradeLicenseLinkTest() {
        // TODO: test businessTradeLicenseLink
    }

    /**
     * Test the property 'businessTradeLicenseLinkPassword'
     */
    @Test
    public void businessTradeLicenseLinkPasswordTest() {
        // TODO: test businessTradeLicenseLinkPassword
    }

    /**
     * Test the property 'businessPlacePhotoLink'
     */
    @Test
    public void businessPlacePhotoLinkTest() {
        // TODO: test businessPlacePhotoLink
    }

    /**
     * Test the property 'businessPlacePhotoLinkPassword'
     */
    @Test
    public void businessPlacePhotoLinkPasswordTest() {
        // TODO: test businessPlacePhotoLinkPassword
    }

    /**
     * Test the property 'businessContinuityProofLink'
     */
    @Test
    public void businessContinuityProofLinkTest() {
        // TODO: test businessContinuityProofLink
    }

    /**
     * Test the property 'businessContinuityProofLinkPassword'
     */
    @Test
    public void businessContinuityProofLinkPasswordTest() {
        // TODO: test businessContinuityProofLinkPassword
    }

    /**
     * Test the property 'otherBusinessAddressProofNumber'
     */
    @Test
    public void otherBusinessAddressProofNumberTest() {
        // TODO: test otherBusinessAddressProofNumber
    }

    /**
     * Test the property 'otherBusinessAddressProofLink'
     */
    @Test
    public void otherBusinessAddressProofLinkTest() {
        // TODO: test otherBusinessAddressProofLink
    }

    /**
     * Test the property 'otherBusinessAddressProofLinkPassword'
     */
    @Test
    public void otherBusinessAddressProofLinkPasswordTest() {
        // TODO: test otherBusinessAddressProofLinkPassword
    }

    /**
     * Test the property 'noOfBusinessAuthorisedPersons'
     */
    @Test
    public void noOfBusinessAuthorisedPersonsTest() {
        // TODO: test noOfBusinessAuthorisedPersons
    }

    /**
     * Test the property 'partnerships'
     */
    @Test
    public void partnershipsTest() {
        // TODO: test partnerships
    }

    /**
     * Test the property 'partnershipDetail'
     */
    @Test
    public void partnershipDetailTest() {
        // TODO: test partnershipDetail
    }

    /**
     * Test the property 'privateEntityDetail'
     */
    @Test
    public void privateEntityDetailTest() {
        // TODO: test privateEntityDetail
    }

}
