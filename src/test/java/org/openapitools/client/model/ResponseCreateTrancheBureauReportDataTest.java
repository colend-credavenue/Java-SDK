/*
 * Allcloud (Allcloud)
 * # Integration Document  The following are the endpoints to be called during and pre/post disbursement state of a loan.  ## Authentication  Authentication details and host will be shared privately.  ## Workflow  **Create Loan** is the initial endpoint to be called to create a loan. Loan will be processed in the background and the status of loan will be provided through the configured Webhook. However, the client can also poll the server via the **Get Loan Details** endpoint to know the loan's status(**Get Loan Details** is rate throttled and polling this API will be restricted). Loan's shall be considered rejected if proper response is not available within 10minutes.  All other endpoints are self-explanatory and can be retried upto 3 times before marking as failure.  ## Allowed Links  All Link attributes should contain 1. Accessible File Link URL which can be Public/Expiry URL/Whitelisted File Server Link(Write to tech.colending@credavenue.com for obtaining our IP address to whitelist) 2. File Link URL with Header Authentication (Header values should be shared with tech.colending@credavenue.com)  ## Allowed Fields Length <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">  <colgroup>  <col  class=\"org-left\" />  <col  class=\"org-left\" />  </colgroup> <thead> <tr> <th scope=\"col\" class=\"org-left\">Data Type</th> <th scope=\"col\" class=\"org-left\">Max Length</th> </tr> </thead>  <tbody> <tr> <td class=\"org-left\">String</td> <td class=\"org-left\">65,535 bytes</td> </tr>  <tr> <td class=\"org-left\">Float</td> <td class=\"org-left\">8 bytes</td> </tr>  <tr> <td class=\"org-left\">Integer</td> <td class=\"org-left\">4 bytes</td> </tr>  <tr> <td class=\"org-left\">Date</td> <td class=\"org-left\">10 characters</td> </tr>  </tbody> </table>  # Webhooks  Webhooks can be configured for the below events  1. Loan status change      Response Payload :      {         \"product_id\": \"\",         \"client_loan_id\": \"\",         \"principal_amount\": \"\",         \"interest_rate\": \"\",         \"tenure\": \"\",         \"tenure_frequency\": \"MONTHLY\",         \"cibil_score\": \"\",         \"purpose\": \"\",         \"repayment_frequency\":\"\",         \"number_of_repayments\": \"\",         \"status\": \"\",         \"principal_outstanding\": \"\",         \"reject_reason\": \"\"     }          Statuses : ['new', 'approved', 'rejected', 'agreement_signed', 'dropped', 'disbursement_ready', 'disbursed', 'matured', 'partner_settled']     2. Loan disbursement details (Disbursed through razorpay)      Callback Payload:      {         \"client_loan_id\":\"\",         \"status\":\"borrower_disbursed\",         \"disbursed_date\":\"\",         \"utr_number\":\"\",         \"disbursement_type\":\"\",         \"payment_reversed\": \"TRUE/FALSE\",         \"disbursement_amount\":\"\",         \"investor_disbursed_amount\": \"\",         \"partner_disbursed_amount\": \"\",         \"differential_interest\":\"\",         \"investor_differential_interest\":\"\",         \"partner_differential_interest\":\"\",         \"differential_days\":\"\",         \"interest_start_date\":\"\",         \"investor_processing_fee\":\"\",         \"partner_processing_fee\":\"\",         \"investor_stamp_duty\":\"\",         \"partner_stamp_duty\":\"\",         \"investor_documentation_charges\":\"\",         \"partner_documentation_charges\":\"\"     }  Provide the following details to configure the webhooks 1. callback URL 2. authentication for the callback URL (header authentication)    # Validations  **PAN**  - **Example**: ABGPA1232P - **Sequence**: First five digits will be alpha, next four will be Numerical and again last single digit will be alpha  **GSTIN**  - **Example**: 33AAACT2727Q1ZV - **Sequence**: First two digits is Numerical, Next is PAN sequence as specified above, again thirteenth digit will be numerical, fourteenth digit is alpha, last digit will be alpha or numerical  **CIN**  - **Example**: U65929TN2017PTC117196 - **Sequence**: First digit is Alpha, next 5 numeric digits, next two alpha, next set of 4 numeric digits, Next 3 alpha, last 6 numeric digits  **PASSPORT**  - **Example**: A2096457 - **Sequence**: Total 8 digits, first digit is Alpha, remaining digits are numerical  **AADHAR NO**  - The standard 12 digits numerical.  **MOBILE NO**  - **Sequence**: 10 numerical digits  **IFSC CODE**  - **Example**: PUNB0596600 - **Sequence**: First four alpha, next fifth digit is 0 (zero) always and last six digit is alpha/numeric. Totally 11 digits.  **PIN CODE**  - 6 numerical digits
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@colending.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ResponseCreateTrancheBureauReportData
 */
public class ResponseCreateTrancheBureauReportDataTest {
    private final ResponseCreateTrancheBureauReportData model = new ResponseCreateTrancheBureauReportData();

    /**
     * Model tests for ResponseCreateTrancheBureauReportData
     */
    @Test
    public void testResponseCreateTrancheBureauReportData() {
        // TODO: test ResponseCreateTrancheBureauReportData
    }

    /**
     * Test the property 'nameOfBureau'
     */
    @Test
    public void nameOfBureauTest() {
        // TODO: test nameOfBureau
    }

    /**
     * Test the property 'bureauVintage'
     */
    @Test
    public void bureauVintageTest() {
        // TODO: test bureauVintage
    }

    /**
     * Test the property 'bureauScore'
     */
    @Test
    public void bureauScoreTest() {
        // TODO: test bureauScore
    }

    /**
     * Test the property 'bureauReportLink'
     */
    @Test
    public void bureauReportLinkTest() {
        // TODO: test bureauReportLink
    }

    /**
     * Test the property 'bureauReportLinkPassword'
     */
    @Test
    public void bureauReportLinkPasswordTest() {
        // TODO: test bureauReportLinkPassword
    }

    /**
     * Test the property 'bureauJsonLink'
     */
    @Test
    public void bureauJsonLinkTest() {
        // TODO: test bureauJsonLink
    }

    /**
     * Test the property 'bureauJsonLinkPassword'
     */
    @Test
    public void bureauJsonLinkPasswordTest() {
        // TODO: test bureauJsonLinkPassword
    }

    /**
     * Test the property 'bureauJson'
     */
    @Test
    public void bureauJsonTest() {
        // TODO: test bureauJson
    }

    /**
     * Test the property 'commercialBureauScore'
     */
    @Test
    public void commercialBureauScoreTest() {
        // TODO: test commercialBureauScore
    }

    /**
     * Test the property 'commercialBureauScoreLink'
     */
    @Test
    public void commercialBureauScoreLinkTest() {
        // TODO: test commercialBureauScoreLink
    }

    /**
     * Test the property 'commercialBureauScoreLinkPassword'
     */
    @Test
    public void commercialBureauScoreLinkPasswordTest() {
        // TODO: test commercialBureauScoreLinkPassword
    }

    /**
     * Test the property 'partnerScoreOnTheCustomer'
     */
    @Test
    public void partnerScoreOnTheCustomerTest() {
        // TODO: test partnerScoreOnTheCustomer
    }

    /**
     * Test the property 'totalExistingObligations'
     */
    @Test
    public void totalExistingObligationsTest() {
        // TODO: test totalExistingObligations
    }

    /**
     * Test the property 'creditCardLimit'
     */
    @Test
    public void creditCardLimitTest() {
        // TODO: test creditCardLimit
    }

    /**
     * Test the property 'numberOfCreditCards'
     */
    @Test
    public void numberOfCreditCardsTest() {
        // TODO: test numberOfCreditCards
    }

    /**
     * Test the property 'numberOfUnsecuredLoans'
     */
    @Test
    public void numberOfUnsecuredLoansTest() {
        // TODO: test numberOfUnsecuredLoans
    }

    /**
     * Test the property 'valueOfTotalUnsecuredLoans'
     */
    @Test
    public void valueOfTotalUnsecuredLoansTest() {
        // TODO: test valueOfTotalUnsecuredLoans
    }

    /**
     * Test the property 'numberOfLoans'
     */
    @Test
    public void numberOfLoansTest() {
        // TODO: test numberOfLoans
    }

    /**
     * Test the property 'valueOfTotalLoans'
     */
    @Test
    public void valueOfTotalLoansTest() {
        // TODO: test valueOfTotalLoans
    }

    /**
     * Test the property 'numberOfEnquiries3months'
     */
    @Test
    public void numberOfEnquiries3monthsTest() {
        // TODO: test numberOfEnquiries3months
    }

    /**
     * Test the property 'numberOfEnquiries6months'
     */
    @Test
    public void numberOfEnquiries6monthsTest() {
        // TODO: test numberOfEnquiries6months
    }

    /**
     * Test the property 'numberOfEnquiries12months'
     */
    @Test
    public void numberOfEnquiries12monthsTest() {
        // TODO: test numberOfEnquiries12months
    }

    /**
     * Test the property 'numberOfWriteoffSuitfiledSettled12months'
     */
    @Test
    public void numberOfWriteoffSuitfiledSettled12monthsTest() {
        // TODO: test numberOfWriteoffSuitfiledSettled12months
    }

    /**
     * Test the property 'maxDpdTradeline12months'
     */
    @Test
    public void maxDpdTradeline12monthsTest() {
        // TODO: test maxDpdTradeline12months
    }

    /**
     * Test the property 'maxOverdueTradeline'
     */
    @Test
    public void maxOverdueTradelineTest() {
        // TODO: test maxOverdueTradeline
    }

    /**
     * Test the property 'totalOverdueAmount12months'
     */
    @Test
    public void totalOverdueAmount12monthsTest() {
        // TODO: test totalOverdueAmount12months
    }

    /**
     * Test the property 'loanAmountSettled12months'
     */
    @Test
    public void loanAmountSettled12monthsTest() {
        // TODO: test loanAmountSettled12months
    }

    /**
     * Test the property 'natureOfLoanSettled1'
     */
    @Test
    public void natureOfLoanSettled1Test() {
        // TODO: test natureOfLoanSettled1
    }

    /**
     * Test the property 'natureOfLoanSettled2'
     */
    @Test
    public void natureOfLoanSettled2Test() {
        // TODO: test natureOfLoanSettled2
    }

    /**
     * Test the property 'totalEmiBounces'
     */
    @Test
    public void totalEmiBouncesTest() {
        // TODO: test totalEmiBounces
    }

    /**
     * Test the property 'emiBounces6months'
     */
    @Test
    public void emiBounces6monthsTest() {
        // TODO: test emiBounces6months
    }

    /**
     * Test the property 'emiBounces12months'
     */
    @Test
    public void emiBounces12monthsTest() {
        // TODO: test emiBounces12months
    }

}
