/*
 * Allcloud (Allcloud)
 * # Integration Document  The following are the endpoints to be called during and pre/post disbursement state of a loan.  ## Authentication  Authentication details and host will be shared privately.  ## Workflow  **Create Loan** is the initial endpoint to be called to create a loan. Loan will be processed in the background and the status of loan will be provided through the configured Webhook. However, the client can also poll the server via the **Get Loan Details** endpoint to know the loan's status(**Get Loan Details** is rate throttled and polling this API will be restricted). Loan's shall be considered rejected if proper response is not available within 10minutes.  All other endpoints are self-explanatory and can be retried upto 3 times before marking as failure.  ## Allowed Links  All Link attributes should contain 1. Accessible File Link URL which can be Public/Expiry URL/Whitelisted File Server Link(Write to tech.colending@credavenue.com for obtaining our IP address to whitelist) 2. File Link URL with Header Authentication (Header values should be shared with tech.colending@credavenue.com)  ## Allowed Fields Length <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">  <colgroup>  <col  class=\"org-left\" />  <col  class=\"org-left\" />  </colgroup> <thead> <tr> <th scope=\"col\" class=\"org-left\">Data Type</th> <th scope=\"col\" class=\"org-left\">Max Length</th> </tr> </thead>  <tbody> <tr> <td class=\"org-left\">String</td> <td class=\"org-left\">65,535 bytes</td> </tr>  <tr> <td class=\"org-left\">Float</td> <td class=\"org-left\">8 bytes</td> </tr>  <tr> <td class=\"org-left\">Integer</td> <td class=\"org-left\">4 bytes</td> </tr>  <tr> <td class=\"org-left\">Date</td> <td class=\"org-left\">10 characters</td> </tr>  </tbody> </table>  # Webhooks  Webhooks can be configured for the below events  1. Loan status change      Response Payload :      {         \"product_id\": \"\",         \"client_loan_id\": \"\",         \"principal_amount\": \"\",         \"interest_rate\": \"\",         \"tenure\": \"\",         \"tenure_frequency\": \"MONTHLY\",         \"cibil_score\": \"\",         \"purpose\": \"\",         \"repayment_frequency\":\"\",         \"number_of_repayments\": \"\",         \"status\": \"\",         \"principal_outstanding\": \"\",         \"reject_reason\": \"\"     }          Statuses : ['new', 'approved', 'rejected', 'agreement_signed', 'dropped', 'disbursement_ready', 'disbursed', 'matured', 'partner_settled']     2. Loan disbursement details (Disbursed through razorpay)      Callback Payload:      {         \"client_loan_id\":\"\",         \"status\":\"borrower_disbursed\",         \"disbursed_date\":\"\",         \"utr_number\":\"\",         \"disbursement_type\":\"\",         \"payment_reversed\": \"TRUE/FALSE\",         \"disbursement_amount\":\"\",         \"investor_disbursed_amount\": \"\",         \"partner_disbursed_amount\": \"\",         \"differential_interest\":\"\",         \"investor_differential_interest\":\"\",         \"partner_differential_interest\":\"\",         \"differential_days\":\"\",         \"interest_start_date\":\"\",         \"investor_processing_fee\":\"\",         \"partner_processing_fee\":\"\",         \"investor_stamp_duty\":\"\",         \"partner_stamp_duty\":\"\",         \"investor_documentation_charges\":\"\",         \"partner_documentation_charges\":\"\"     }  Provide the following details to configure the webhooks 1. callback URL 2. authentication for the callback URL (header authentication)    # Validations  **PAN**  - **Example**: ABGPA1232P - **Sequence**: First five digits will be alpha, next four will be Numerical and again last single digit will be alpha  **GSTIN**  - **Example**: 33AAACT2727Q1ZV - **Sequence**: First two digits is Numerical, Next is PAN sequence as specified above, again thirteenth digit will be numerical, fourteenth digit is alpha, last digit will be alpha or numerical  **CIN**  - **Example**: U65929TN2017PTC117196 - **Sequence**: First digit is Alpha, next 5 numeric digits, next two alpha, next set of 4 numeric digits, Next 3 alpha, last 6 numeric digits  **PASSPORT**  - **Example**: A2096457 - **Sequence**: Total 8 digits, first digit is Alpha, remaining digits are numerical  **AADHAR NO**  - The standard 12 digits numerical.  **MOBILE NO**  - **Sequence**: 10 numerical digits  **IFSC CODE**  - **Example**: PUNB0596600 - **Sequence**: First four alpha, next fifth digit is 0 (zero) always and last six digit is alpha/numeric. Totally 11 digits.  **PIN CODE**  - 6 numerical digits
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@colending.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.BodyCreateLoanAssets;
import org.openapitools.client.model.BodyCreateLoanBankStatement;
import org.openapitools.client.model.BodyCreateLoanBusiness;
import org.openapitools.client.model.BodyCreateLoanCoApplicants;
import org.openapitools.client.model.BodyCreateLoanDeviationDetails;
import org.openapitools.client.model.BodyCreateLoanDisbursementAccounts;
import org.openapitools.client.model.BodyCreateLoanFinancialData;
import org.openapitools.client.model.BodyCreateLoanGuarantors;
import org.openapitools.client.model.BodyCreateLoanInsuranceDetails;
import org.openapitools.client.model.BodyCreateLoanLinkedLoanInfos;
import org.openapitools.client.model.BodyCreateLoanReferences;
import org.openapitools.client.model.BodyCreateLoanSourcingDetail;
import org.openapitools.client.model.BodyCreateLoanTranches;
import org.openapitools.client.model.BodyCreateLoanVideoKycDetail;
import org.threeten.bp.LocalDate;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for BodyCreateLoan
 */
public class BodyCreateLoanTest {
    private final BodyCreateLoan model = new BodyCreateLoan();

    /**
     * Model tests for BodyCreateLoan
     */
    @Test
    public void testBodyCreateLoan() {
        // TODO: test BodyCreateLoan
    }

    /**
     * Test the property 'customerType'
     */
    @Test
    public void customerTypeTest() {
        // TODO: test customerType
    }

    /**
     * Test the property 'customerCategory'
     */
    @Test
    public void customerCategoryTest() {
        // TODO: test customerCategory
    }

    /**
     * Test the property 'clientCustomerId'
     */
    @Test
    public void clientCustomerIdTest() {
        // TODO: test clientCustomerId
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'firstName'
     */
    @Test
    public void firstNameTest() {
        // TODO: test firstName
    }

    /**
     * Test the property 'middleName'
     */
    @Test
    public void middleNameTest() {
        // TODO: test middleName
    }

    /**
     * Test the property 'lastName'
     */
    @Test
    public void lastNameTest() {
        // TODO: test lastName
    }

    /**
     * Test the property 'gender'
     */
    @Test
    public void genderTest() {
        // TODO: test gender
    }

    /**
     * Test the property 'dateOfBirth'
     */
    @Test
    public void dateOfBirthTest() {
        // TODO: test dateOfBirth
    }

    /**
     * Test the property 'age'
     */
    @Test
    public void ageTest() {
        // TODO: test age
    }

    /**
     * Test the property 'mobileNumber'
     */
    @Test
    public void mobileNumberTest() {
        // TODO: test mobileNumber
    }

    /**
     * Test the property 'phoneNumber'
     */
    @Test
    public void phoneNumberTest() {
        // TODO: test phoneNumber
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'officialEmailId'
     */
    @Test
    public void officialEmailIdTest() {
        // TODO: test officialEmailId
    }

    /**
     * Test the property 'placeOfBirth'
     */
    @Test
    public void placeOfBirthTest() {
        // TODO: test placeOfBirth
    }

    /**
     * Test the property 'currentAddress'
     */
    @Test
    public void currentAddressTest() {
        // TODO: test currentAddress
    }

    /**
     * Test the property 'currentVillage'
     */
    @Test
    public void currentVillageTest() {
        // TODO: test currentVillage
    }

    /**
     * Test the property 'currentCityTier'
     */
    @Test
    public void currentCityTierTest() {
        // TODO: test currentCityTier
    }

    /**
     * Test the property 'currentCity'
     */
    @Test
    public void currentCityTest() {
        // TODO: test currentCity
    }

    /**
     * Test the property 'currentDistrict'
     */
    @Test
    public void currentDistrictTest() {
        // TODO: test currentDistrict
    }

    /**
     * Test the property 'currentState'
     */
    @Test
    public void currentStateTest() {
        // TODO: test currentState
    }

    /**
     * Test the property 'currentCountry'
     */
    @Test
    public void currentCountryTest() {
        // TODO: test currentCountry
    }

    /**
     * Test the property 'currentPincode'
     */
    @Test
    public void currentPincodeTest() {
        // TODO: test currentPincode
    }

    /**
     * Test the property 'residenceTypeCurrentAddress'
     */
    @Test
    public void residenceTypeCurrentAddressTest() {
        // TODO: test residenceTypeCurrentAddress
    }

    /**
     * Test the property 'yearsOfStayInCurrentAddress'
     */
    @Test
    public void yearsOfStayInCurrentAddressTest() {
        // TODO: test yearsOfStayInCurrentAddress
    }

    /**
     * Test the property 'permanentAddress'
     */
    @Test
    public void permanentAddressTest() {
        // TODO: test permanentAddress
    }

    /**
     * Test the property 'permanentCity'
     */
    @Test
    public void permanentCityTest() {
        // TODO: test permanentCity
    }

    /**
     * Test the property 'permanentCityTier'
     */
    @Test
    public void permanentCityTierTest() {
        // TODO: test permanentCityTier
    }

    /**
     * Test the property 'permanentDistrict'
     */
    @Test
    public void permanentDistrictTest() {
        // TODO: test permanentDistrict
    }

    /**
     * Test the property 'permanentState'
     */
    @Test
    public void permanentStateTest() {
        // TODO: test permanentState
    }

    /**
     * Test the property 'permanentPincode'
     */
    @Test
    public void permanentPincodeTest() {
        // TODO: test permanentPincode
    }

    /**
     * Test the property 'residenceTypePermanentAddress'
     */
    @Test
    public void residenceTypePermanentAddressTest() {
        // TODO: test residenceTypePermanentAddress
    }

    /**
     * Test the property 'yearsOfStayInPermanentAddress'
     */
    @Test
    public void yearsOfStayInPermanentAddressTest() {
        // TODO: test yearsOfStayInPermanentAddress
    }

    /**
     * Test the property 'mailingAddress'
     */
    @Test
    public void mailingAddressTest() {
        // TODO: test mailingAddress
    }

    /**
     * Test the property 'maritalStatus'
     */
    @Test
    public void maritalStatusTest() {
        // TODO: test maritalStatus
    }

    /**
     * Test the property 'religion'
     */
    @Test
    public void religionTest() {
        // TODO: test religion
    }

    /**
     * Test the property 'nationality'
     */
    @Test
    public void nationalityTest() {
        // TODO: test nationality
    }

    /**
     * Test the property 'fatherName'
     */
    @Test
    public void fatherNameTest() {
        // TODO: test fatherName
    }

    /**
     * Test the property 'motherName'
     */
    @Test
    public void motherNameTest() {
        // TODO: test motherName
    }

    /**
     * Test the property 'spouseName'
     */
    @Test
    public void spouseNameTest() {
        // TODO: test spouseName
    }

    /**
     * Test the property 'educationQualification'
     */
    @Test
    public void educationQualificationTest() {
        // TODO: test educationQualification
    }

    /**
     * Test the property 'netMonthlyIncome'
     */
    @Test
    public void netMonthlyIncomeTest() {
        // TODO: test netMonthlyIncome
    }

    /**
     * Test the property 'annualIncome'
     */
    @Test
    public void annualIncomeTest() {
        // TODO: test annualIncome
    }

    /**
     * Test the property 'noOfDependants'
     */
    @Test
    public void noOfDependantsTest() {
        // TODO: test noOfDependants
    }

    /**
     * Test the property 'occupation'
     */
    @Test
    public void occupationTest() {
        // TODO: test occupation
    }

    /**
     * Test the property 'partnerScoreOnTheCustomer'
     */
    @Test
    public void partnerScoreOnTheCustomerTest() {
        // TODO: test partnerScoreOnTheCustomer
    }

    /**
     * Test the property 'politicallyExposed'
     */
    @Test
    public void politicallyExposedTest() {
        // TODO: test politicallyExposed
    }

    /**
     * Test the property 'incomeSource'
     */
    @Test
    public void incomeSourceTest() {
        // TODO: test incomeSource
    }

    /**
     * Test the property 'applicantProfession'
     */
    @Test
    public void applicantProfessionTest() {
        // TODO: test applicantProfession
    }

    /**
     * Test the property 'cautionNegativeProfile'
     */
    @Test
    public void cautionNegativeProfileTest() {
        // TODO: test cautionNegativeProfile
    }

    /**
     * Test the property 'udyamNumber'
     */
    @Test
    public void udyamNumberTest() {
        // TODO: test udyamNumber
    }

    /**
     * Test the property 'panCheck'
     */
    @Test
    public void panCheckTest() {
        // TODO: test panCheck
    }

    /**
     * Test the property 'dedupeStatus'
     */
    @Test
    public void dedupeStatusTest() {
        // TODO: test dedupeStatus
    }

    /**
     * Test the property 'panNumber'
     */
    @Test
    public void panNumberTest() {
        // TODO: test panNumber
    }

    /**
     * Test the property 'panNumberLink'
     */
    @Test
    public void panNumberLinkTest() {
        // TODO: test panNumberLink
    }

    /**
     * Test the property 'panNumberLinkPassword'
     */
    @Test
    public void panNumberLinkPasswordTest() {
        // TODO: test panNumberLinkPassword
    }

    /**
     * Test the property 'form60Link'
     */
    @Test
    public void form60LinkTest() {
        // TODO: test form60Link
    }

    /**
     * Test the property 'form60LinkPassword'
     */
    @Test
    public void form60LinkPasswordTest() {
        // TODO: test form60LinkPassword
    }

    /**
     * Test the property 'aadharNumber'
     */
    @Test
    public void aadharNumberTest() {
        // TODO: test aadharNumber
    }

    /**
     * Test the property 'aadharNumberLink'
     */
    @Test
    public void aadharNumberLinkTest() {
        // TODO: test aadharNumberLink
    }

    /**
     * Test the property 'aadharNumberLinkPassword'
     */
    @Test
    public void aadharNumberLinkPasswordTest() {
        // TODO: test aadharNumberLinkPassword
    }

    /**
     * Test the property 'voterIdNumber'
     */
    @Test
    public void voterIdNumberTest() {
        // TODO: test voterIdNumber
    }

    /**
     * Test the property 'votingIdLink'
     */
    @Test
    public void votingIdLinkTest() {
        // TODO: test votingIdLink
    }

    /**
     * Test the property 'votingIdLinkPassword'
     */
    @Test
    public void votingIdLinkPasswordTest() {
        // TODO: test votingIdLinkPassword
    }

    /**
     * Test the property 'drivingLicenseNumber'
     */
    @Test
    public void drivingLicenseNumberTest() {
        // TODO: test drivingLicenseNumber
    }

    /**
     * Test the property 'drivingLicenseNumberLink'
     */
    @Test
    public void drivingLicenseNumberLinkTest() {
        // TODO: test drivingLicenseNumberLink
    }

    /**
     * Test the property 'drivingLicenseNumberLinkPassword'
     */
    @Test
    public void drivingLicenseNumberLinkPasswordTest() {
        // TODO: test drivingLicenseNumberLinkPassword
    }

    /**
     * Test the property 'drivingLicenseExpiryDate'
     */
    @Test
    public void drivingLicenseExpiryDateTest() {
        // TODO: test drivingLicenseExpiryDate
    }

    /**
     * Test the property 'passportNumber'
     */
    @Test
    public void passportNumberTest() {
        // TODO: test passportNumber
    }

    /**
     * Test the property 'passportNumberLink'
     */
    @Test
    public void passportNumberLinkTest() {
        // TODO: test passportNumberLink
    }

    /**
     * Test the property 'passportNumberLinkPassword'
     */
    @Test
    public void passportNumberLinkPasswordTest() {
        // TODO: test passportNumberLinkPassword
    }

    /**
     * Test the property 'videoImageLink'
     */
    @Test
    public void videoImageLinkTest() {
        // TODO: test videoImageLink
    }

    /**
     * Test the property 'videoImageLinkPassword'
     */
    @Test
    public void videoImageLinkPasswordTest() {
        // TODO: test videoImageLinkPassword
    }

    /**
     * Test the property 'videoKycDetail'
     */
    @Test
    public void videoKycDetailTest() {
        // TODO: test videoKycDetail
    }

    /**
     * Test the property 'otherKycNumber'
     */
    @Test
    public void otherKycNumberTest() {
        // TODO: test otherKycNumber
    }

    /**
     * Test the property 'otherKycLink'
     */
    @Test
    public void otherKycLinkTest() {
        // TODO: test otherKycLink
    }

    /**
     * Test the property 'otherKycLinkPassword'
     */
    @Test
    public void otherKycLinkPasswordTest() {
        // TODO: test otherKycLinkPassword
    }

    /**
     * Test the property 'rentAgreementLink'
     */
    @Test
    public void rentAgreementLinkTest() {
        // TODO: test rentAgreementLink
    }

    /**
     * Test the property 'rentAgreementLinkPassword'
     */
    @Test
    public void rentAgreementLinkPasswordTest() {
        // TODO: test rentAgreementLinkPassword
    }

    /**
     * Test the property 'utilityBillsLink'
     */
    @Test
    public void utilityBillsLinkTest() {
        // TODO: test utilityBillsLink
    }

    /**
     * Test the property 'utilityBillsLinkPassword'
     */
    @Test
    public void utilityBillsLinkPasswordTest() {
        // TODO: test utilityBillsLinkPassword
    }

    /**
     * Test the property 'photoLink'
     */
    @Test
    public void photoLinkTest() {
        // TODO: test photoLink
    }

    /**
     * Test the property 'photoLinkPassword'
     */
    @Test
    public void photoLinkPasswordTest() {
        // TODO: test photoLinkPassword
    }

    /**
     * Test the property 'employerTier'
     */
    @Test
    public void employerTierTest() {
        // TODO: test employerTier
    }

    /**
     * Test the property 'employerCategory'
     */
    @Test
    public void employerCategoryTest() {
        // TODO: test employerCategory
    }

    /**
     * Test the property 'employmentType'
     */
    @Test
    public void employmentTypeTest() {
        // TODO: test employmentType
    }

    /**
     * Test the property 'employmentDetailsName'
     */
    @Test
    public void employmentDetailsNameTest() {
        // TODO: test employmentDetailsName
    }

    /**
     * Test the property 'employmentDetailsAddress'
     */
    @Test
    public void employmentDetailsAddressTest() {
        // TODO: test employmentDetailsAddress
    }

    /**
     * Test the property 'employmentDetailsYearsOfExperience'
     */
    @Test
    public void employmentDetailsYearsOfExperienceTest() {
        // TODO: test employmentDetailsYearsOfExperience
    }

    /**
     * Test the property 'employmentDetailsDesignation'
     */
    @Test
    public void employmentDetailsDesignationTest() {
        // TODO: test employmentDetailsDesignation
    }

    /**
     * Test the property 'employementVintageCurrentOrganisation'
     */
    @Test
    public void employementVintageCurrentOrganisationTest() {
        // TODO: test employementVintageCurrentOrganisation
    }

    /**
     * Test the property 'totalWorkExperience'
     */
    @Test
    public void totalWorkExperienceTest() {
        // TODO: test totalWorkExperience
    }

    /**
     * Test the property 'payslipLink'
     */
    @Test
    public void payslipLinkTest() {
        // TODO: test payslipLink
    }

    /**
     * Test the property 'payslipLinkPassword'
     */
    @Test
    public void payslipLinkPasswordTest() {
        // TODO: test payslipLinkPassword
    }

    /**
     * Test the property 'tdsCertificateLink'
     */
    @Test
    public void tdsCertificateLinkTest() {
        // TODO: test tdsCertificateLink
    }

    /**
     * Test the property 'tdsCertificateLinkPassword'
     */
    @Test
    public void tdsCertificateLinkPasswordTest() {
        // TODO: test tdsCertificateLinkPassword
    }

    /**
     * Test the property 'business'
     */
    @Test
    public void businessTest() {
        // TODO: test business
    }

    /**
     * Test the property 'guarantors'
     */
    @Test
    public void guarantorsTest() {
        // TODO: test guarantors
    }

    /**
     * Test the property 'coApplicants'
     */
    @Test
    public void coApplicantsTest() {
        // TODO: test coApplicants
    }

    /**
     * Test the property 'bankStatement'
     */
    @Test
    public void bankStatementTest() {
        // TODO: test bankStatement
    }

    /**
     * Test the property 'nameOfBureau'
     */
    @Test
    public void nameOfBureauTest() {
        // TODO: test nameOfBureau
    }

    /**
     * Test the property 'bureauVintage'
     */
    @Test
    public void bureauVintageTest() {
        // TODO: test bureauVintage
    }

    /**
     * Test the property 'bureauScore'
     */
    @Test
    public void bureauScoreTest() {
        // TODO: test bureauScore
    }

    /**
     * Test the property 'bureauReportJsonLink'
     */
    @Test
    public void bureauReportJsonLinkTest() {
        // TODO: test bureauReportJsonLink
    }

    /**
     * Test the property 'bureauReportJsonLinkPassword'
     */
    @Test
    public void bureauReportJsonLinkPasswordTest() {
        // TODO: test bureauReportJsonLinkPassword
    }

    /**
     * Test the property 'bureauJsonLink'
     */
    @Test
    public void bureauJsonLinkTest() {
        // TODO: test bureauJsonLink
    }

    /**
     * Test the property 'bureauJsonLinkPassword'
     */
    @Test
    public void bureauJsonLinkPasswordTest() {
        // TODO: test bureauJsonLinkPassword
    }

    /**
     * Test the property 'bureauJson'
     */
    @Test
    public void bureauJsonTest() {
        // TODO: test bureauJson
    }

    /**
     * Test the property 'commercialBureauScore'
     */
    @Test
    public void commercialBureauScoreTest() {
        // TODO: test commercialBureauScore
    }

    /**
     * Test the property 'commercialBureauScoreLink'
     */
    @Test
    public void commercialBureauScoreLinkTest() {
        // TODO: test commercialBureauScoreLink
    }

    /**
     * Test the property 'commercialBureauScoreLinkPassword'
     */
    @Test
    public void commercialBureauScoreLinkPasswordTest() {
        // TODO: test commercialBureauScoreLinkPassword
    }

    /**
     * Test the property 'partnerScoreOnTheCustomerIncludingBureauReport'
     */
    @Test
    public void partnerScoreOnTheCustomerIncludingBureauReportTest() {
        // TODO: test partnerScoreOnTheCustomerIncludingBureauReport
    }

    /**
     * Test the property 'totalExistingObligations'
     */
    @Test
    public void totalExistingObligationsTest() {
        // TODO: test totalExistingObligations
    }

    /**
     * Test the property 'creditCardLimit'
     */
    @Test
    public void creditCardLimitTest() {
        // TODO: test creditCardLimit
    }

    /**
     * Test the property 'noOfCreditCards'
     */
    @Test
    public void noOfCreditCardsTest() {
        // TODO: test noOfCreditCards
    }

    /**
     * Test the property 'totalNumberOfUnsecuredLoans'
     */
    @Test
    public void totalNumberOfUnsecuredLoansTest() {
        // TODO: test totalNumberOfUnsecuredLoans
    }

    /**
     * Test the property 'valueOfTotalUnsecuredLoans'
     */
    @Test
    public void valueOfTotalUnsecuredLoansTest() {
        // TODO: test valueOfTotalUnsecuredLoans
    }

    /**
     * Test the property 'totalNumberOfLoans'
     */
    @Test
    public void totalNumberOfLoansTest() {
        // TODO: test totalNumberOfLoans
    }

    /**
     * Test the property 'valueOfTotalLoans'
     */
    @Test
    public void valueOfTotalLoansTest() {
        // TODO: test valueOfTotalLoans
    }

    /**
     * Test the property 'numberOfEnquiries3months'
     */
    @Test
    public void numberOfEnquiries3monthsTest() {
        // TODO: test numberOfEnquiries3months
    }

    /**
     * Test the property 'numberOfEnquiries6months'
     */
    @Test
    public void numberOfEnquiries6monthsTest() {
        // TODO: test numberOfEnquiries6months
    }

    /**
     * Test the property 'numberOfEnquiries12months'
     */
    @Test
    public void numberOfEnquiries12monthsTest() {
        // TODO: test numberOfEnquiries12months
    }

    /**
     * Test the property 'numberOfWriteoffSuitfiledSettledInTheLast12Months'
     */
    @Test
    public void numberOfWriteoffSuitfiledSettledInTheLast12MonthsTest() {
        // TODO: test numberOfWriteoffSuitfiledSettledInTheLast12Months
    }

    /**
     * Test the property 'maxDpdTradelineLast12months'
     */
    @Test
    public void maxDpdTradelineLast12monthsTest() {
        // TODO: test maxDpdTradelineLast12months
    }

    /**
     * Test the property 'maxOverdueTradeline'
     */
    @Test
    public void maxOverdueTradelineTest() {
        // TODO: test maxOverdueTradeline
    }

    /**
     * Test the property 'totalOverdueAmountInLast12m'
     */
    @Test
    public void totalOverdueAmountInLast12mTest() {
        // TODO: test totalOverdueAmountInLast12m
    }

    /**
     * Test the property 'amountOfLoanSettledInLast12m'
     */
    @Test
    public void amountOfLoanSettledInLast12mTest() {
        // TODO: test amountOfLoanSettledInLast12m
    }

    /**
     * Test the property 'natureOfLoanSettled1'
     */
    @Test
    public void natureOfLoanSettled1Test() {
        // TODO: test natureOfLoanSettled1
    }

    /**
     * Test the property 'natureOfLoanSettled2'
     */
    @Test
    public void natureOfLoanSettled2Test() {
        // TODO: test natureOfLoanSettled2
    }

    /**
     * Test the property 'totalEmiBounces'
     */
    @Test
    public void totalEmiBouncesTest() {
        // TODO: test totalEmiBounces
    }

    /**
     * Test the property 'bouncesInLast6m'
     */
    @Test
    public void bouncesInLast6mTest() {
        // TODO: test bouncesInLast6m
    }

    /**
     * Test the property 'bouncesInLast12m'
     */
    @Test
    public void bouncesInLast12mTest() {
        // TODO: test bouncesInLast12m
    }

    /**
     * Test the property 'bureauValidityDate'
     */
    @Test
    public void bureauValidityDateTest() {
        // TODO: test bureauValidityDate
    }

    /**
     * Test the property 'financialData'
     */
    @Test
    public void financialDataTest() {
        // TODO: test financialData
    }

    /**
     * Test the property 'abbEmiRatio'
     */
    @Test
    public void abbEmiRatioTest() {
        // TODO: test abbEmiRatio
    }

    /**
     * Test the property 'dscr'
     */
    @Test
    public void dscrTest() {
        // TODO: test dscr
    }

    /**
     * Test the property 'foir'
     */
    @Test
    public void foirTest() {
        // TODO: test foir
    }

    /**
     * Test the property 'ltr'
     */
    @Test
    public void ltrTest() {
        // TODO: test ltr
    }

    /**
     * Test the property 'insr'
     */
    @Test
    public void insrTest() {
        // TODO: test insr
    }

    /**
     * Test the property 'eligibilityAsPerInsr'
     */
    @Test
    public void eligibilityAsPerInsrTest() {
        // TODO: test eligibilityAsPerInsr
    }

    /**
     * Test the property 'eligibilityAsPerFoir'
     */
    @Test
    public void eligibilityAsPerFoirTest() {
        // TODO: test eligibilityAsPerFoir
    }

    /**
     * Test the property 'eligibilityAsPerLtv'
     */
    @Test
    public void eligibilityAsPerLtvTest() {
        // TODO: test eligibilityAsPerLtv
    }

    /**
     * Test the property 'eligibilityLoanAmount'
     */
    @Test
    public void eligibilityLoanAmountTest() {
        // TODO: test eligibilityLoanAmount
    }

    /**
     * Test the property 'fcf'
     */
    @Test
    public void fcfTest() {
        // TODO: test fcf
    }

    /**
     * Test the property 'emiObligations'
     */
    @Test
    public void emiObligationsTest() {
        // TODO: test emiObligations
    }

    /**
     * Test the property 'viabilityRatio'
     */
    @Test
    public void viabilityRatioTest() {
        // TODO: test viabilityRatio
    }

    /**
     * Test the property 'productId'
     */
    @Test
    public void productIdTest() {
        // TODO: test productId
    }

    /**
     * Test the property 'clientLoanId'
     */
    @Test
    public void clientLoanIdTest() {
        // TODO: test clientLoanId
    }

    /**
     * Test the property 'applicationId'
     */
    @Test
    public void applicationIdTest() {
        // TODO: test applicationId
    }

    /**
     * Test the property 'loanCycle'
     */
    @Test
    public void loanCycleTest() {
        // TODO: test loanCycle
    }

    /**
     * Test the property 'partnerBranchCode'
     */
    @Test
    public void partnerBranchCodeTest() {
        // TODO: test partnerBranchCode
    }

    /**
     * Test the property 'partnerBranchName'
     */
    @Test
    public void partnerBranchNameTest() {
        // TODO: test partnerBranchName
    }

    /**
     * Test the property 'productType'
     */
    @Test
    public void productTypeTest() {
        // TODO: test productType
    }

    /**
     * Test the property 'partnerProductCode'
     */
    @Test
    public void partnerProductCodeTest() {
        // TODO: test partnerProductCode
    }

    /**
     * Test the property 'partnerSchemeCode'
     */
    @Test
    public void partnerSchemeCodeTest() {
        // TODO: test partnerSchemeCode
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'subCategory'
     */
    @Test
    public void subCategoryTest() {
        // TODO: test subCategory
    }

    /**
     * Test the property 'purpose'
     */
    @Test
    public void purposeTest() {
        // TODO: test purpose
    }

    /**
     * Test the property 'disbursementType'
     */
    @Test
    public void disbursementTypeTest() {
        // TODO: test disbursementType
    }

    /**
     * Test the property 'numberOfTranches'
     */
    @Test
    public void numberOfTranchesTest() {
        // TODO: test numberOfTranches
    }

    /**
     * Test the property 'endBorrowerAmount'
     */
    @Test
    public void endBorrowerAmountTest() {
        // TODO: test endBorrowerAmount
    }

    /**
     * Test the property 'existingLenderAmount'
     */
    @Test
    public void existingLenderAmountTest() {
        // TODO: test existingLenderAmount
    }

    /**
     * Test the property 'principalAmount'
     */
    @Test
    public void principalAmountTest() {
        // TODO: test principalAmount
    }

    /**
     * Test the property 'interestRate'
     */
    @Test
    public void interestRateTest() {
        // TODO: test interestRate
    }

    /**
     * Test the property 'interestType'
     */
    @Test
    public void interestTypeTest() {
        // TODO: test interestType
    }

    /**
     * Test the property 'tenure'
     */
    @Test
    public void tenureTest() {
        // TODO: test tenure
    }

    /**
     * Test the property 'tenureFrequency'
     */
    @Test
    public void tenureFrequencyTest() {
        // TODO: test tenureFrequency
    }

    /**
     * Test the property 'repaymentFrequency'
     */
    @Test
    public void repaymentFrequencyTest() {
        // TODO: test repaymentFrequency
    }

    /**
     * Test the property 'numberOfRepayments'
     */
    @Test
    public void numberOfRepaymentsTest() {
        // TODO: test numberOfRepayments
    }

    /**
     * Test the property 'firstRepaymentDate'
     */
    @Test
    public void firstRepaymentDateTest() {
        // TODO: test firstRepaymentDate
    }

    /**
     * Test the property 'repaymentMode'
     */
    @Test
    public void repaymentModeTest() {
        // TODO: test repaymentMode
    }

    /**
     * Test the property 'advanceEmi'
     */
    @Test
    public void advanceEmiTest() {
        // TODO: test advanceEmi
    }

    /**
     * Test the property 'umrn'
     */
    @Test
    public void umrnTest() {
        // TODO: test umrn
    }

    /**
     * Test the property 'interestStartDate'
     */
    @Test
    public void interestStartDateTest() {
        // TODO: test interestStartDate
    }

    /**
     * Test the property 'differentialInterest'
     */
    @Test
    public void differentialInterestTest() {
        // TODO: test differentialInterest
    }

    /**
     * Test the property 'processingFee'
     */
    @Test
    public void processingFeeTest() {
        // TODO: test processingFee
    }

    /**
     * Test the property 'stampDuty'
     */
    @Test
    public void stampDutyTest() {
        // TODO: test stampDuty
    }

    /**
     * Test the property 'insuranceCharges'
     */
    @Test
    public void insuranceChargesTest() {
        // TODO: test insuranceCharges
    }

    /**
     * Test the property 'documentationCharges'
     */
    @Test
    public void documentationChargesTest() {
        // TODO: test documentationCharges
    }

    /**
     * Test the property 'otherCharges'
     */
    @Test
    public void otherChargesTest() {
        // TODO: test otherCharges
    }

    /**
     * Test the property 'loanPlrType'
     */
    @Test
    public void loanPlrTypeTest() {
        // TODO: test loanPlrType
    }

    /**
     * Test the property 'loanPlrRate'
     */
    @Test
    public void loanPlrRateTest() {
        // TODO: test loanPlrRate
    }

    /**
     * Test the property 'spreadId'
     */
    @Test
    public void spreadIdTest() {
        // TODO: test spreadId
    }

    /**
     * Test the property 'loanEmi'
     */
    @Test
    public void loanEmiTest() {
        // TODO: test loanEmi
    }

    /**
     * Test the property 'rcuStatus'
     */
    @Test
    public void rcuStatusTest() {
        // TODO: test rcuStatus
    }

    /**
     * Test the property 'surrogate'
     */
    @Test
    public void surrogateTest() {
        // TODO: test surrogate
    }

    /**
     * Test the property 'subClass'
     */
    @Test
    public void subClassTest() {
        // TODO: test subClass
    }

    /**
     * Test the property 'weakerSection'
     */
    @Test
    public void weakerSectionTest() {
        // TODO: test weakerSection
    }

    /**
     * Test the property 'disbursementAccounts'
     */
    @Test
    public void disbursementAccountsTest() {
        // TODO: test disbursementAccounts
    }

    /**
     * Test the property 'assets'
     */
    @Test
    public void assetsTest() {
        // TODO: test assets
    }

    /**
     * Test the property 'references'
     */
    @Test
    public void referencesTest() {
        // TODO: test references
    }

    /**
     * Test the property 'insuranceDetails'
     */
    @Test
    public void insuranceDetailsTest() {
        // TODO: test insuranceDetails
    }

    /**
     * Test the property 'pslFlag'
     */
    @Test
    public void pslFlagTest() {
        // TODO: test pslFlag
    }

    /**
     * Test the property 'pslDescription'
     */
    @Test
    public void pslDescriptionTest() {
        // TODO: test pslDescription
    }

    /**
     * Test the property 'pslCode'
     */
    @Test
    public void pslCodeTest() {
        // TODO: test pslCode
    }

    /**
     * Test the property 'pslProofLink'
     */
    @Test
    public void pslProofLinkTest() {
        // TODO: test pslProofLink
    }

    /**
     * Test the property 'pslProofLinkPassword'
     */
    @Test
    public void pslProofLinkPasswordTest() {
        // TODO: test pslProofLinkPassword
    }

    /**
     * Test the property 'tranches'
     */
    @Test
    public void tranchesTest() {
        // TODO: test tranches
    }

    /**
     * Test the property 'linkedLoanInfos'
     */
    @Test
    public void linkedLoanInfosTest() {
        // TODO: test linkedLoanInfos
    }

    /**
     * Test the property 'sourcingDetail'
     */
    @Test
    public void sourcingDetailTest() {
        // TODO: test sourcingDetail
    }

    /**
     * Test the property 'deviationDetails'
     */
    @Test
    public void deviationDetailsTest() {
        // TODO: test deviationDetails
    }

}
